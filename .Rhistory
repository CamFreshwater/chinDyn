pred_seq <- seq(min(dat_in$env_anomaly, na.rm = T),
max(dat_in$env_anomaly, na.rm = T),
length.out = 100)
new_dat <- expand.grid(env_anomaly = pred_seq, smolt = unique(dat_in$smolt))
preds <- predict(gam_in, new_dat, se.fit = TRUE, exclude="s(stock)",
newdata.guaranteed=TRUE, type = "link")
new_dat %>%
mutate(fit = boot::inv.logit(preds$fit),
up = boot::inv.logit(preds$fit + (qnorm(0.975) * preds$se.fit)),
low = boot::inv.logit(preds$fit + (qnorm(0.025) * preds$se.fit)),
logit_fit = preds$fit,
logit_up = preds$fit + (qnorm(0.975) * preds$se.fit),
logit_low = preds$fit + (qnorm(0.025) * preds$se.fit)
)
})
fe_splines <- dat %>%
select(metric, fixed_preds) %>%
unnest(fixed_preds) %>%
left_join(., cov %>% select(metric, class), by = "metric") %>%
# glimpse()
ggplot(.) +
geom_line(aes(x = env_anomaly, y = fit, color = smolt)) +
geom_ribbon(aes(x = env_anomaly, ymin = low, ymax = up, fill = smolt),
alpha = 0.3) +
facet_wrap(~fct_reorder(metric, as.numeric(as.factor(class))),
scales = "free_x") +
ggsidekick::theme_sleek() +
labs(x = "Environmental Anomaly", y = "Predicted Survival")
fe_splines
pdf(here::here("figs", "gam", "fixed_effect_splines.pdf"),
height = 5, width = 7)
fe_splines
dev.off()
saveRDS(fe_splines, here::here("data", "gamFits", "fe_splines.rds"))
pdf(here::here("figs", "gam", "fixed_effect_splines_link.pdf"),
height = 5, width = 7)
dat %>%
select(metric, fixed_preds) %>%
unnest(fixed_preds) %>%
left_join(., cov %>% select(metric, class), by = "metric") %>%
ggplot(.) +
geom_line(aes(x = env_anomaly, y = logit_fit, color = smolt)) +
geom_ribbon(aes(x = env_anomaly, ymin = logit_low, ymax = logit_up,
fill = smolt), alpha = 0.3) +
facet_wrap(~fct_reorder(metric, as.numeric(as.factor(class))),
scales = "free_x") +
ggsidekick::theme_sleek()
dev.off()
# generate stock-specific predictions from more complicated model
# observed data for plotting
dat$ss_preds <- map2(dat$data, dat$gam2, function(dat_in, gam_in) {
pred_seq <- seq(min(dat_in$env_anomaly, na.rm = T),
max(dat_in$env_anomaly, na.rm = T),
length.out = 100)
new_dat <- expand.grid(env_anomaly = pred_seq,
stock = unique(dat_in$stock)) %>%
left_join(., dat_in %>% select(stock, smolt) %>% distinct(), by = "stock")
preds <- predict(gam_in, new_dat, se.fit = TRUE, type = "link")
new_dat %>%
mutate(
stock = fct_reorder(stock, as.numeric(smolt)),
fit = as.numeric(boot::inv.logit(preds$fit)),
up = as.numeric(boot::inv.logit(preds$fit +
(qnorm(0.975) * preds$se.fit))),
low = as.numeric(boot::inv.logit(preds$fit +
(qnorm(0.025) * preds$se.fit))),
logit_fit = preds$fit,
logit_up = preds$fit + (qnorm(0.975) * preds$se.fit),
logit_low = preds$fit + (qnorm(0.025) * preds$se.fit)
)
})
pdf(here::here("figs", "gam", "stock_specific_splines.pdf"),
height = 5, width = 7)
pmap(list(dat$ss_preds, dat$data, dat$metric), function (pred_dat, obs_dat, title) {
ggplot() +
geom_line(data = pred_dat, aes(x = env_anomaly, y = fit, color = smolt)) +
geom_ribbon(data = pred_dat, aes(x = env_anomaly, ymin = low, ymax = up,
fill = smolt),
alpha = 0.3) +
geom_point(data = obs_dat, aes(x = env_anomaly, y = survival, fill = smolt),
shape = 21) +
facet_wrap(~stock)  +
ggsidekick::theme_sleek() +
labs(title = title)
})
dev.off()
pdf(here::here("figs", "gam", "stock_specific_splines_link.pdf"),
height = 5, width = 7)
pmap(list(dat$ss_preds, dat$data, dat$metric), function (pred_dat, obs_dat, title) {
ggplot() +
geom_line(data = pred_dat, aes(x = env_anomaly, y = logit_fit,
color = smolt)) +
geom_ribbon(data = pred_dat, aes(x = env_anomaly, ymin = logit_low,
ymax = logit_up, fill = smolt),
alpha = 0.3) +
geom_point(data = obs_dat, aes(x = env_anomaly, y = boot::logit(survival),
fill = smolt),
shape = 21) +
facet_wrap(~stock)  +
ggsidekick::theme_sleek() +
labs(title = title)
})
dev.off()
dat
dat$aic
dat
dat %>% select(metric, aic) %>% unnest()
dat %>% select(metric, aic) %>% unnest(cols = c(aic)) %>% print(n=Inf)
pdf(here::here("figs", "gam", "stock_specific_splines.pdf"),
height = 5, width = 7)
pmap(list(dat$ss_preds, dat$data, dat$metric), function (pred_dat, obs_dat, title) {
ggplot() +
geom_line(data = pred_dat, aes(x = env_anomaly, y = fit, color = smolt)) +
geom_ribbon(data = pred_dat, aes(x = env_anomaly, ymin = low, ymax = up,
fill = smolt),
alpha = 0.3) +
geom_point(data = obs_dat, aes(x = env_anomaly, y = survival, fill = smolt),
shape = 21) +
facet_wrap(~stock, scales = "free_y")  +
ggsidekick::theme_sleek() +
labs(title = title)
})
dev.off()
slimpse(surv)
glimpse(surv)
glimpse(cov)
unique(cov$metric)
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom")) %>%
group_by(metric) %>%
summarize(min(year))
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly)) %>%
group_by(metric) %>%
summarize(min(year))
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly)) %>%
group_by(metric) %>%
summarize(max(year))
trimWhales <- whales %>%
#scale and subtract two years to estimate effects at maturity
mutate(lagged_year = Year - 2,
nrkw_anom = scale(NRKW_N)[ , 1],
srkw_anom = scale(SRKW_N)[ , 1],
rkw_anom = scale(NRKW_N + SRKW_N)[ , 1]) %>%
select(year = lagged_year, nrkw_anom, srkw_anom, rkw_anom)
# for oceanographic indices which have monthly values calculate annual means and
# means for April-July (priming period)
sstArc2 <- sstArc %>%
mutate(year_n = floor(year),
year_c = as.character(year_n),
month_cont = (year - year_n) * 12,
month = ceiling(month_cont)
)
phys_ocean <- left_join(pdo, npgo, by = c("month", "year")) %>%
left_join(., sstArc2 %>% select(year = year_n, month, sst_arc),
by = c("month", "year")) %>%
pivot_longer(., cols = c("pdo", "npgo", "sst_arc"), names_to = "index",
values_to = "value") %>%
#identify months making up priming period
mutate(prime_period = ifelse(month > 3 & month < 8, "y", "n")) %>%
group_by(year, prime_period, index) %>%
mutate(prime_mean = mean(value)) %>%
group_by(year, index) %>%
mutate(annual_mean = mean(value)) %>%
ungroup() %>%
mutate(prime_anom = scale(prime_mean)[ , 1],
annual_anom = scale(annual_mean)[ , 1]) %>%
filter(prime_period == "y") %>%
select(year, index, prime_mean:annual_anom) %>%
distinct()
phys_ocean_anom <- phys_ocean %>%
select(-prime_mean, -annual_mean) %>%
pivot_wider(names_from = index, values_from = c(prime_anom, annual_anom)) %>%
glimpse()
## consolidate all anomalies
covOut <- phys_ocean_anom %>%
full_join(trimSeal, by = "year") %>%
full_join(trimWhales, by = "year") %>%
full_join(biIndex %>% select(year, bi_anom = bi_stnd), by = "year") %>%
full_join(trimDiet, by = "year") %>%
full_join(trimEnv, by = "year") %>%
pivot_longer(cols = 2:ncol(.), names_to = "metric", values_to = "anomaly") %>%
mutate(
time_step = case_when(
grepl("prime", metric) ~ "seasonal",
metric == "cci_anom" ~ "seasonal",
TRUE ~ "annual"
),
class = case_when(
grepl("annual", metric) ~ "physical",
grepl("prime", metric) ~ "physical",
metric == "bi_anom" ~ "physical",
grepl("seal", metric) ~ "predator",
grepl("rkw", metric) ~ "predator",
TRUE ~ "diet"
),
region = case_when(
metric == "srkw_anom" ~ "sog",
grepl("rkw", metric) ~ "basin",
class == "physical" ~ "basin",
metric == "cci_anom" ~ "ca_current",
metric %in% c("zp_env_anom", "fish_env_anom", "seal_anom") ~ "sog",
metric %in% c("boreal_anom", "south_anom", "fish_diet_anom") ~ "wcvi"
)
)
write.csv(covOut, here("data/salmonData/survCovariateAnom.csv"), row.names = F)
cov <- read.csv(here::here("data/salmonData/survCovariateAnom.csv"),
stringsAsFactors = F)
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly),
year > ) %>%
group_by(metric) %>%
summarize(min(year))
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly)) %>%
group_by(metric) %>%
summarize(min(year))
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly)) %>%
group_by(metric) %>%
summarize(max(year))
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly),
year > 1977,
year < 2013) %>%
group_by(metric) %>%
summarize(max(year))
glimpse(cov)
# Model selection with SST arc, seals and RKW
cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly),
year > 1977,
year < 2013) %>%
group_by(metric) %>%
select(year, metric, anomaly) %>%
pivot_wider(names_from = "metric", values_from = "anomaly") %>%
glimpse()
# Model selection with SST arc, seals and RKW
trim_cov <- cov %>%
filter(metric %in% c("annual_anom_sst_arc", "rkw_anom", "seal_anom"),
!is.na(anomaly),
year > 1977,
year < 2013) %>%
group_by(metric) %>%
select(year, metric, anomaly) %>%
pivot_wider(names_from = "metric", values_from = "anomaly")
glimpse(surv)
dat2 <- surv %>%
left_join(., trim_cov, by = "year") %>%
filter(!is.na(seal_anom))
glimpse(Dat2)
glimpse(dat2)
m1_sst <- gam(survival ~ s(annual_anom_sst_arc, m = 2, bs = "tp", k = 4) +
s(annual_anom_sst_arc, by = smolt, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = dat2, family=betar(link="logit"))
m1_seal <- gam(survival ~ s(seal_anom, m = 2, bs = "tp", k = 4) +
s(seal_anom, by = smolt, m = 1, bs = "tp", k = 4) +
s(seal_anom, by = stock, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = dat2, family=betar(link="logit"))
m1_rkw <- gam(survival ~ s(rkw_anom, m = 2, bs = "tp", k = 4) +
s(rkw_anom, by = smolt, m = 1, bs = "tp", k = 4) +
s(rkw_anom, by = stock, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = dat2, family=betar(link="logit"))
m2_rkw <- gam(survival ~ s(annual_anom_sst_arc, m = 2, bs = "tp", k = 4) +
s(annual_anom_sst_arc, by = smolt, m = 1, bs = "tp", k = 4) +
s(rkw_anom, m = 2, bs = "tp", k = 4) +
s(rkw_anom, by = smolt, m = 1, bs = "tp", k = 4) +
s(rkw_anom, by = stock, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = dat2, family=betar(link="logit"))
m2_seal <- gam(survival ~ s(annual_anom_sst_arc, m = 2, bs = "tp", k = 4) +
s(annual_anom_sst_arc, by = smolt, m = 1, bs = "tp", k = 4) +
s(seal_anom, m = 2, bs = "tp", k = 4) +
s(seal_anom, by = smolt, m = 1, bs = "tp", k = 4) +
s(seal_anom, by = stock, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = dat2, family=betar(link="logit"))
AIC(m1_sst, m1_seal, m1_rkw, m2_rkw, m2_seal)
summary(m2_seal)
unique(cov$metric)
?corrplot
glimpse(cov)
## consolidate all anomalies
covWide <- phys_ocean_anom %>%
full_join(trimSeal, by = "year") %>%
full_join(trimWhales, by = "year") %>%
full_join(biIndex %>% select(year, bi_anom = bi_stnd), by = "year") %>%
full_join(trimDiet, by = "year") %>%
full_join(trimEnv, by = "year")
glimpse(covWide)
## Correlelogram
cor(covWide %>% select(-year))
glimpse(covWide)
## Correlelogram
covWide %>%
select(-year) %>%
na.omit()
## Correlelogram
corCov <- covWide %>%
select(-year) %>%
na.omit() %>%
as.matrix()
?corrplot
corrplot::corrplot(corCov)
## Correlelogram
corCov <- covWide %>%
select(-year) %>%
na.omit() %>%
as.matrix() %>%
corr()
## Correlelogram
corCov <- covWide %>%
select(-year) %>%
na.omit() %>%
as.matrix() %>%
cor()
corrplot::corrplot(corCov, method = "number")
corrplot::corrplot(corCov, method = "number", "upper")
library(mgcv)
library(tidyverse)
cov <- read.csv(here::here("data/salmonData/survCovariateAnom.csv"),
stringsAsFactors = F)
surv_raw <- read.csv(here::here("data/salmonData/cwt_indicator_surv_clean.csv"),
stringsAsFactors = FALSE)
surv <- surv_raw %>%
filter(agg_reg == "SS",
!is.na(M)) %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock))
stock_key <- surv_raw %>%
filter(agg_reg == "SS") %>%
select(stock, stock_name, region, smolt) %>%
distinct()
glimpse(surv_raw)
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock))
surv_raw %>%
filter(
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype")
surv <- surv_raw %>%
filter(
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock))
unique(surv$group)
glimpse(surv)
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group))
surv <- surv_raw %>%
filter(
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group))
unique(surv$group)
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group)) %>%
droplevels()
surv <- surv_raw %>%
filter(
#agg_reg == "SS",
!is.na(M),
!group == "north_streamtype") %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group)) %>%
droplevels()
unique(surv$group)
Levels(surv$group)
levels(surv$group)
surv <- surv_raw %>%
filter(
#agg_reg == "SS",
!is.na(M),
!group %in% c("north_streamtype", "north_oceantype")) %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group)) %>%
droplevels()
levels(surv$group)
stock_key <- surv_raw %>%
# filter(agg_reg == "SS") %>%
select(stock, stock_name, region, smolt) %>%
distinct()
glimpse(cov)
unique(cov$region)
!is.na(M),
!group %in% c("north_streamtype", "north_oceantype")) %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group)) %>%
droplevels()
surv2 <- surv_raw %>%
filter(
!is.na(M),
!group %in% c("north_streamtype", "north_oceantype")) %>%
#add ocean entry year to match covariates based on life history
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1)) %>%
select(year, stock, smolt, group, survival, M) %>%
mutate(smolt = as.factor(smolt),
stock = as.factor(stock),
group = as.factor(group)) %>%
droplevels()
cov %>%
filter(!region == "sog") %>%
select(year, metric, env_anomaly = anomaly) %>%
nest(data = c(year, env_anomaly))
dat2 <- cov %>%
filter(!region == "sog") %>%
select(year, metric, env_anomaly = anomaly) %>%
nest(data = c(year, env_anomaly)) %>%
mutate(
#for each covariate combine with survival data
data = map(data, function (x) {
surv2 %>%
left_join(., x, by = "year") %>%
filter(!is.na(env_anomaly))
}),
#fit gam w/ random intercepts
gam1 = map(data, function (x) {
gam(survival ~ s(env_anomaly, by = smolt, bs = "tp", m = 2, k = 4) +
s(stock, bs = "re"),
data = x, family=betar(link="logit"))
}),
#fit gam w/ stock-specific splines
gam2 = map(data, function (x) {
gam(survival ~ s(env_anomaly, m = 2, bs = "tp", k = 4) +
s(env_anomaly, by = smolt, m = 1, bs = "tp", k = 4) +
s(env_anomaly, by = stock, m = 1, bs = "tp", k = 4) +
s(stock, bs = "re"),
data = x, family=betar(link="logit"))
}),
#save AIC for both
aic = map2(gam1, gam2, function(x, y) {
data.frame(
model = c("rand_ints", "stock_splines"),
aic = c(AIC(x), AIC(y))
)
})
)
