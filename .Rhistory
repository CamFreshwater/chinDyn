tt$trend_select
tt
tt$trend_select[[2]]$summary
tt$trend_select[[2]]$best_model
warnings()
tt$trend_select[[1]]$summary
tt$trend_select[[2]]$summary
tt <- surv_tbl[3:4,]
# evaluate up to 3 trends per group
trend_select_list <- lapply(surv_tbl$m_mat, function(x) {
find_dfa_trends(x, iter = 2500, kmin = 1, kmax = 3, chains = 4,
variance =  "equal",
control = list(adapt_delta = 0.95, max_treedepth = 20))
})
length(trend_select_list)
map(trend_select_list, ~.$best_model)
map(trend_select_list, ~.$summary)
surb_tbl$top_dfa <- map(trend_select_list, ~.$best_model)
surv_tbl$top_dfa <- map(trend_select_list, ~.$best_model)
surv_tble
surv_tbl
surv_tbl$top_dfa[[1]]
saveRDS(surv_tbl, here::here("data", "dfaBayesFits", "group_top_models.rds"))
tt <- rotate_trends(surv_tbl$top_dfa)
tt <- rotate_trends(surv_tbl$top_dfa[[1]])
plot_trends(tt)
plot_fitted(surv_tbl$top_dfa[[1]])
#focus on subset of BC pops for initial analyses
make_mat <- function(x) {
x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
select(-year) %>%
as.matrix() %>%
t()
}
m_mat <- make_mat(surv)
fit_dfa
surv_tbl
surv_tbl %>%
map2(group, top_dfa, function (group_name, x) {
file_name <- paste(group_name, "three_trend_fit.pdf")
rot_dum <- rotate_trends(x)
pdf(paste("figs", "dfa", "bayes", file_name))
plot_trends(rot_dum)
plot_fitted(x)
plot_loadings(rot_dum) +
ylim(-3, 3)
dev.off()
})
surv_tbl
surv_tbl %>%
map2(.$group, .$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "three_trend_fit.pdf")
rot_dum <- rotate_trends(x)
pdf(paste("figs", "dfa", "bayes", file_name))
plot_trends(rot_dum)
plot_fitted(x)
plot_loadings(rot_dum) +
ylim(-3, 3)
dev.off()
})
surv_tble$group
surv_tbl$group
# surv_tbl %>%
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "three_trend_fit.pdf")
rot_dum <- rotate_trends(x)
pdf(paste("figs", "dfa", "bayes", file_name))
plot_trends(rot_dum)
plot_fitted(x)
plot_loadings(rot_dum) +
ylim(-3, 3)
dev.off()
})
group_name <- surv_tbl$group[[1]]
paste(group_name, "three_trend_fit.pdf")
paste(group_name, "three_trend_fit.pdf", sep = "_")
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
paste("figs", "dfa", "bayes", file_name)
here::here("figs", "dfa", "bayes", file_name)
# surv_tbl %>%
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
# rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
# plot_trends(rot_dum)
plot_fitted(x)
# plot_loadings(rot_dum) +
#   ylim(-3, 3)
dev.off()
})
x <- surv_tbl$top_dfa[[1]]
# plot_trends(rot_dum)
plot_fitted(x)
# surv_tbl %>%
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
# rot_dum <- rotate_trends(x)
p <- plot_fitted(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
p
# plot_trends(rot_dum)
# plot_loadings(rot_dum) +
#   ylim(-3, 3)
dev.off()
})
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
# rot_dum <- rotate_trends(x)
p <- plot_fitted(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
p
# plot_trends(rot_dum)
# plot_loadings(rot_dum) +
#   ylim(-3, 3)
dev.off()
# surv_tbl %>%
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
# rot_dum <- rotate_trends(x)
p <- plot_fitted(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(p)
# plot_trends(rot_dum)
# plot_loadings(rot_dum) +
#   ylim(-3, 3)
dev.off()
})
# surv_tbl %>%
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
# p <- plot_fitted(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-3, 3))
dev.off()
})
map2(surv_tbl$group, surv_tbl$top_dfa, function (group_name, x) {
file_name <- paste(group_name, "3trend_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
})
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
# mutate(mean = mean / 1000) %>%
filter(reg == "SOG")
glimpse(seals)
set.seed(1)
sim_dat <- sim_dfa(
num_trends = 1,
num_years = 20,
num_ts = 4
)
for(i in 1:nrow(cov)) {
sim_dat$y[cov$timeseries[i],cov$time[i]] =
sim_dat$pred[cov$timeseries[i],cov$time[i]] +
c(0.1,0.2,0.3,0.4)[cov$timeseries[i]]*cov$value[i]
}
cov = expand.grid("time"=1:20, "timeseries"=1:4, "covariate"=1)
cov$value = rnorm(nrow(cov),0,0.1)
for(i in 1:nrow(cov)) {
sim_dat$y[cov$timeseries[i],cov$time[i]] =
sim_dat$pred[cov$timeseries[i],cov$time[i]] +
c(0.1,0.2,0.3,0.4)[cov$timeseries[i]]*cov$value[i]
}
mod = fit_dfa(y = sim_dat$y, obs_covar = cov, num_trends = 1,
chains=1, iter=300)
plot(c(sim_dat$x), xlab="Time", ylab="True trend")
plot_trends(rotate_trends(mod)) + ylab("Estimated trend")
glimpse(sim_dat)
glimpse(cov)
tail(cov)
set.seed(1)
sim_dat <- sim_dfa(
num_trends = 2,
num_years = 20,
num_ts = 3
)
set.seed(1)
sim_dat <- sim_dfa(
num_trends = 2,
num_years = 20,
num_ts = 3
)
cov = rnorm(20, 0, 1)
b_pro = c(0.1,0.3)
x = matrix(0,2,20)
for(i in 1:2) {
x[i,1] = cov[1]*b_pro[i]
}
for(i in 2:length(cov)) {
x[1,i] = x[1,i-1] + cov[i]*b_pro[1] + rnorm(1,0,1)
x[2,i] = x[2,i-1] + cov[i]*b_pro[2] + rnorm(1,0,1)
}
y = sim_dat$Z %*% x
pro_cov = expand.grid("trend"=1:2, "time"=1:20, "covariate"=1)
pro_cov$value = cov[pro_cov$time]
mod = fit_dfa(y = sim_dat$y, pro_covar = pro_cov, num_trends = 2,
chains=1, iter=1000)
set.seed(1)
sim_dat <- sim_dfa(
num_trends = 2,
num_years = 20,
num_ts = 3
)
cov = rnorm(20, 0, 1)
b_pro = c(0.1,0.3)
x = matrix(0,2,20)
for(i in 1:2) {
x[i,1] = cov[1]*b_pro[i]
}
for(i in 2:length(cov)) {
x[1,i] = x[1,i-1] + cov[i]*b_pro[1] + rnorm(1,0,1)
x[2,i] = x[2,i-1] + cov[i]*b_pro[2] + rnorm(1,0,1)
}
y = sim_dat$Z %*% x
pro_cov = expand.grid("trend"=1:2, "time"=1:20, "covariate"=1)
pro_cov$value = cov[pro_cov$time]
pro_cov
mod = fit_dfa(y = sim_dat$y, pro_covar = pro_cov, num_trends = 2,
chains=1, iter=1000)
library(bayesdfa)
set.seed(1)
sim_dat <- sim_dfa(
num_trends = 2,
num_years = 20,
num_ts = 3
)
cov = rnorm(20, 0, 1)
b_pro = c(0.1,0.3)
x = matrix(0,2,20)
for(i in 1:2) {
x[i,1] = cov[1]*b_pro[i]
}
for(i in 2:length(cov)) {
x[1,i] = x[1,i-1] + cov[i]*b_pro[1] + rnorm(1,0,1)
x[2,i] = x[2,i-1] + cov[i]*b_pro[2] + rnorm(1,0,1)
}
y = sim_dat$Z %*% x
pro_cov = expand.grid("trend"=1:2, "time"=1:20, "covariate"=1)
pro_cov$value = cov[pro_cov$time]
mod = fit_dfa(y = sim_dat$y, pro_covar = pro_cov, num_trends = 2,
chains=1, iter=1000)
scale(seals$mean)
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG")
library(tidyverse)
library(bayesdfa)
library(rstan)
#helper functions to fit and post-process DFA
source(here("R/functions/dfaFunctions.R"))
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(
M = -log(surv),
agg_reg = case_when(
(is.na(lat)) ~ "north",
(lat > 52 & !region == "UFR") ~ "north",
(region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI")) ~ "south",
TRUE ~ "SS"
),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY) %>%
group_by(stock) %>%
mutate(Mz = scale_f(M)) %>%
ungroup()
#focus on subset of BC pops for initial analyses
make_mat <- function(x) {
x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
select(-year) %>%
as.matrix() %>%
t()
}
m_mat <- make_mat(surv)
surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(
M = -log(surv),
agg_reg = case_when(
(is.na(lat)) ~ "north",
(lat > 52 & !region == "UFR") ~ "north",
(region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI")) ~ "south",
TRUE ~ "SS"
),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY) %>%
group_by(stock) %>%
mutate(Mz = scale_f(M)) %>%
ungroup()
surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(
M = -log(surv),
agg_reg = case_when(
(is.na(lat)) ~ "north",
(lat > 52 & !region == "UFR") ~ "north",
(region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI")) ~ "south",
TRUE ~ "SS"
),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY)
#focus on subset of BC pops for initial analyses
make_mat <- function(x) {
x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
select(-year) %>%
as.matrix() %>%
t()
}
m_mat <- make_mat(surv)
# evaluate up to 3 trends per group
surv_tbl <- readRDS(here::here("data", "dfaBayesFits", "group_top_models.rds"))
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG")
scale(seals$mean)
scale(seals$mean)[, 1]
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG") %>%
mutate(z_mean = scale(mean)[, 1])
head(seals)
surv_tbl$m_mat[[1]]
seq(1, ncol(tt))
tt <- surv_tbl$m_mat[[1]]
seq(1, ncol(tt))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1)
seal_cov
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = seals$z_mean)
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
nrow(tt)
range(seals$year)
range(surv$year)
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG",
!year < 1972) %>%
mutate(z_mean = scale(mean)[, 1])
range(seals$year)
# make new surv tbl with trimmed years
surv_trim3 <- surv %>%
filter(!group %in% c("north_oceantype", "south_streamtype")) %>%
filter(!year > 2014)
length(unique(seals$year))
length(unique(surv$year))
length(unique(surv_trim3$year))
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat)
)
surv_tbl$m_mat[[1]]
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
tt <- surv_tbl$m_mat[[1]]
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
seal_cov
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(.$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat)#,
# # reformat seal covariate to match bayes dfa input
# seal_cov = map(.$m_mat, function (x) {
#   expand.grid("time" = seq(1, ncol(x)),
#               "timeseries" = seq(1, nrow(x)),
#               "covariates" = 1) %>%
#     mutate(value = rep(seals$z_mean, times = nrow(x)))
# })
)
seal_cov = map(surv_tbl$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(surv_tbl$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
head(seal_cov)
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
require(tidyverse)
allmypackages <- as.data.frame(installed.packages())
allmypackages <- allmypackages %>%
filter(Priority != "base" | is.na(Priority)) %>%
select(-c(Enhances:MD5sum, LinkingTo:Suggests)) %>%
droplevels()
str(allmypackages)
package_source <- function(pkg){
x <- as.character(packageDescription(pkg)$Repository)
if (length(x) == 0) {
y <- as.character(packageDescription(pkg)$GithubRepo)
z <- as.character(packageDescription(pkg)$GithubUsername)
if (length(y) == 0) {
return("Other")
} else {
return(str_c("GitHub repo = ",
z,
"/",
y))
}
} else {
return(x)
}
}
# show the first 60 as an example
head(sapply(allmypackages$Package,
package_source),
60)
allmypackages$whereat <- sapply(allmypackages$Package,
package_source)
str(allmypackages)
table(allmypackages$whereat)
allmypackages %>%
filter(whereat == "Other") %>%
select(Package, Version)
write.csv(allmypackages, "mypackagelistApril2020.csv")
