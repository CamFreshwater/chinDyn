# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = herr1_seq,
rkw_z = rkw_seq)
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = herr1_seq,
rkw_z = rkw_seq,
a_group2 = "north")
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
excl_pars[grepl("stock", excl_pars)]
summary(mod)
head(new_heat_dat)
excl_pars[grepl("stock", excl_pars)]
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = herr1_seq,
rkw_z = rkw_seq,
a_group2 = unique(dat$a_group2))
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = 0,
rkw_z = rkw_seq,
a_group2 = "north")
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = 0,
rkw_z = rkw_seq,
a_group2 = "north")
# make mixed effects predictions using stock mean values
# note that order of covariates in DF varies and is important
mixed_preds_herr0 <- expand.grid(herr_OEY_z = herr0_seq,
stock = unique(dat$stock),
var = "herr0") %>%
left_join(., stock_means %>% select(-herr_OEY_z), by = "stock") %>%
select(herr_OEY_z, herr_OEY1_z, rkw_z2, stock, var, a_group2)
mixed_preds_herr1 <- expand.grid(herr_OEY1_z = herr1_seq,
stock = unique(dat$stock),
var = "herr1") %>%
left_join(., stock_means %>% select(-herr_OEY1_z), by = "stock") %>%
select(herr_OEY1_z, herr_OEY_z, rkw_z2, stock, var, a_group2)
mixed_preds_rkw <- expand.grid(rkw_z2 = rkw_seq,
stock = unique(dat$stock),
var = "rkw") %>%
left_join(., stock_means %>% select(-rkw_z2), by = "stock") %>%
select(rkw_z2, herr_OEY_z, herr_OEY1_z, stock, var, a_group2)
mixed_pred_list1 <- list(herr0 = mixed_preds_herr0,
herr1 = mixed_preds_herr1,
rkw = mixed_preds_rkw)
## mixed effects predictions for plotting
mixed_pred_dat <- map(mixed_pred_list1, function (x) {
gen_pred(mod, x, random = TRUE)
}) %>%
bind_rows() %>%
# left_join(., dat %>% select(stock, a_group2), by = "stock") %>%
mutate(a_group2 = fct_relevel(a_group2, "offshore", "north", "broad",
"south"))
fixed_pred_list1 <- map(mixed_pred_list1, function(x) {
#replace stock-specific covariates with 0s
x[, 2] <- 0
x[, 3] <- 0
x %>%
select(-stock) %>%
# adult grouping predictions only relevant for rkw
mutate(a_group2 = ifelse(var == "rkw", as.character(a_group2), "south")) %>%
distinct()
})
fixed_pred_dat <- map(fixed_pred_list1, function (x) {
gen_pred(mod, x, random = FALSE)
}) %>%
bind_rows() %>%
distinct() %>%
mutate(a_group2 = fct_relevel(a_group2, "offshore", "north", "south"))
glimpse(fixed_pred_dat)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = 0,
rkw_z2 = rkw_seq,
a_group2 = "north")
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
# heat plots
new_heat_dat <- expand.grid(herr_OEY_z = herr0_seq,
herr_OEY1_z = 0,
rkw_z2 = rkw_seq,
a_group2 = unique(dat$a_group2))
heat_preds <- predict(mod, new_heat_dat, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
heat_dat <- new_heat_dat %>%
mutate(link_fit = as.numeric(heat_preds$fit),
link_se = as.numeric(heat_preds$se.fit),
pred_gen = exp(link_fit),
pred_gen_lo = exp(link_fit + (qnorm(0.025) * link_se)),
pred_gen_up = exp(link_fit + (qnorm(0.975) * link_se))
)
heat_dat %>%
filter(herr_OEY1_z == median(herr1_seq)) %>%
distinct() %>%
ggplot(., aes(x = rkw_z, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek() +
facet_wrap(~a_group2)
heat_dat <- new_heat_dat %>%
mutate(link_fit = as.numeric(heat_preds$fit),
link_se = as.numeric(heat_preds$se.fit),
pred_gen = exp(link_fit),
pred_gen_lo = exp(link_fit + (qnorm(0.025) * link_se)),
pred_gen_up = exp(link_fit + (qnorm(0.975) * link_se))
)
glimpse(heat_dat)
heat_dat %>%
filter(herr_OEY1_z == median(herr1_seq)) %>%
distinct() %>%
ggplot(., aes(x = rkw_z, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek() +
facet_wrap(~a_group2)
heat_dat %>%
# filter(herr_OEY1_z == median(herr1_seq)) %>%
distinct() %>%
ggplot(., aes(x = rkw_z2, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek() +
facet_wrap(~a_group2)
heat_dat %>%
filter(a_group2 == "north") %>%
distinct() %>%
ggplot(., aes(x = rkw_z2, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek()
heat_plot <- heat_dat %>%
filter(a_group2 == "north") %>%
distinct() %>%
ggplot(., aes(x = rkw_z2, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek()
# plot mixed effects w/ observations
obs_dat <- dat %>%
select(stock, a_group2, gen_length, herr_OEY_z, herr_OEY1_z, rkw_z) %>%
pivot_longer(., cols = c(herr_OEY_z, herr_OEY1_z, rkw_z),
names_to = "var", values_to = "z_value") %>%
mutate(var = fct_recode(as.factor(var),
herr0 = "herr_OEY_z",
herr1 = "herr_OEY1_z",
rkw = "rkw_z"))
dat %>%
select(stock, a_group2, gen_length, herr_OEY_z, herr_OEY1_z, rkw_z) %>%
pivot_longer(., cols = c(herr_OEY_z, herr_OEY1_z, rkw_z),
names_to = "var", values_to = "z_value") %>%
mutate(var = fct_recode(as.factor(var),
herr0 = "herr_OEY_z",
herr1 = "herr_OEY1_z",
rkw = "rkw_z2"))
glimpse(dat)
# plot mixed effects w/ observations
obs_dat <- dat %>%
select(stock, a_group2, gen_length, herr_OEY_z, herr_OEY1_z, rkw_z2) %>%
pivot_longer(., cols = c(herr_OEY_z, herr_OEY1_z, rkw_z2),
names_to = "var", values_to = "z_value") %>%
mutate(var = fct_recode(as.factor(var),
herr0 = "herr_OEY_z",
herr1 = "herr_OEY1_z",
rkw = "rkw_z2"))
ggplot(mixed_pred_dat, aes(x = cov1)) +
geom_line(aes(y = pred_gen)) +
geom_ribbon(aes(ymin = pred_gen_lo, ymax = pred_gen_up, fill = a_group2),
alpha = 0.3) +
# geom_point(data = obs_dat, aes(x = z_value, y = gen_length, fill = a_group2),
#            shape = 21, alpha = 0.5) +
ggsidekick::theme_sleek() +
labs(x = "Standardized Abundance", y = "Generation Length") +
facet_grid(var~fct_reorder(stock, as.numeric(a_group2))) +
coord_cartesian(ylim = c(2, 6)) +
theme(legend.position = "top")
mixed_splines <- ggplot(mixed_pred_dat, aes(x = cov1)) +
geom_line(aes(y = pred_gen)) +
geom_ribbon(aes(ymin = pred_gen_lo, ymax = pred_gen_up, fill = a_group2),
alpha = 0.3) +
# geom_point(data = obs_dat, aes(x = z_value, y = gen_length, fill = a_group2),
#            shape = 21, alpha = 0.5) +
ggsidekick::theme_sleek() +
labs(x = "Standardized Abundance", y = "Generation Length") +
facet_grid(var~fct_reorder(stock, as.numeric(a_group2))) +
coord_cartesian(ylim = c(2, 6)) +
theme(legend.position = "top")
ggpubr::annotate_figure(p, bottom = "Standardized Abundance",
left = "Predicted Generation Length")
mixed_splines <- ggplot(mixed_pred_dat, aes(x = cov1)) +
geom_line(aes(y = pred_gen)) +
geom_ribbon(aes(ymin = pred_gen_lo, ymax = pred_gen_up, fill = a_group2),
alpha = 0.3) +
geom_point(data = obs_dat, aes(x = z_value, y = gen_length, fill = a_group2),
shape = 21, alpha = 0.5) +
ggsidekick::theme_sleek() +
labs(x = "Standardized Abundance", y = "Generation Length") +
facet_grid(var~fct_reorder(stock, as.numeric(a_group2))) +
coord_cartesian(ylim = c(2, 6)) +
theme(legend.position = "top")
mixed_splines
heat_plot <- heat_dat %>%
filter(a_group2 == "north") %>%
distinct() %>%
ggplot(., aes(x = rkw_z2, y = herr_OEY_z)) +
geom_raster(aes(fill = pred_gen)) +
scale_fill_viridis_c(name = "Predicted\nGeneration\nLength") +
labs(x = "RKW Anomaly", y = "SoG Herring Anomaly") +
ggsidekick::theme_sleek()
png(here::here("figs", "gam", "gen_gam", "herr_rkw_fe_heatplot.png"),
height = 5, width = 6, res = 300, units = "in")
heat_plot
dev.off()
png(here::here("figs", "gam", "gen_gam", "fe_splines.png"),
height = 5.5, width = 7.5, res = 300, units = "in")
ggpubr::annotate_figure(p, bottom = "Standardized Abundance",
left = "Predicted Generation Length")
dev.off()
png(here::here("figs", "gam", "gen_gam", "herr_rkw_mixed_splines.png"),
height = 3.5, width = 9, res = 300, units = "in")
mixed_splines
dev.off()
png(here::here("figs", "gam", "gen_gam", "herr_rkw_fe_splines.png"),
height = 5.5, width = 7.5, res = 300, units = "in")
ggpubr::annotate_figure(p, bottom = "Standardized Abundance",
left = "Predicted Generation Length")
dev.off()
library(mgcv)
library(tidyverse)
gen_raw <- readRDS(here::here("data", "salmonData",
"cwt_indicator_surv_clean.RDS"))
#remove stocks with no gen_length data
gen <- gen_raw %>%
filter(!is.na(gen_length)) %>%
mutate(gen_z = as.numeric(scale(gen_length)))
# dataframe of only stocks and adult groupings
stk_tbl <- gen %>%
group_by(stock) %>%
mutate(max_age = ceiling(max(gen_length)),
max_ocean_age = ifelse(smolt == "oceantype", max_age - 1,
max_age - 2)) %>%
ungroup() %>%
select(stock, stock_name, smolt, run, j_group2, a_group:a_group3,
max_age, max_ocean_age) %>%
distinct()
# prepare covariate data
adult_cov <- readRDS(here::here("data/salmonData/cov_subset_adult.rds"))
herr_year0 <- adult_cov$herring %>%
filter(stock == "SoGHerringR") %>%
mutate(
ck_ocean_year0 = herring_age0_year) %>%
select(herr_age0_abund = herr_abund, ck_ocean_year0)
herr_year1 <- adult_cov$herring %>%
mutate(
herr_reg = case_when(
stock %in% c("WCVIHerringR", "SoGHerringR") ~ "south",
stock %in% c("HGHerringR", "CCHerringR", "PRDHerringR") ~ "north"
),
ck_ocean_year1 = herring_age0_year - 1) %>%
group_by(ck_ocean_year1, herr_reg) %>%
summarize(agg_abund = sum(herr_abund), .groups = "drop") %>%
pivot_wider(names_from = herr_reg, values_from = agg_abund,
names_prefix = "herr_abund_OEY1_")
# calculate rkw abundance for northern stocks (NRKW) and southern stocks (SRKW +
# NRKW) by brood year (rolling average of brood year + 1:4)
sog_stks <- stk_tbl %>%
filter(j_group2 == "sog")
# add RKW data to each stock
rkw <- expand.grid(stock = sog_stks$stock,
year = unique(adult_cov$rkw$year)) %>%
arrange(stock) %>%
left_join(., stk_tbl, by = "stock") %>%
select(stock, stock_name, smolt, a_group2, max_age, max_ocean_age, year) %>%
droplevels() %>%
left_join(., adult_cov$rkw, by = "year") %>%
mutate(
#identify which rkw pop is relevant
relevant_rkw = case_when(
a_group2 == "south" ~ total_n,
a_group2 == "offshore" ~ srkw_n,
a_group2 == "north" ~ nrkw_n
),
#calculate brood year based on smolt type to pair with generation data
brood_year = year - max_age
) %>%
group_by(stock) %>%
mutate(
#calculate rolling mean based on the maximum ocean age of each stock
rollmean_rkw = zoo::rollmean(relevant_rkw, max_ocean_age, fill = NA,
align = "right"),
rollmean_rkw2 = zoo::rollmean(total_n, max_ocean_age, fill = NA,
align = "right")
) %>%
ungroup()
# SOG data
sog_ocean <- adult_cov$sog %>%
mutate(ck_ocean_year0 = year) %>%
select(-year)
# join relevant stock data, herring data and rkw
dat <- gen %>%
filter(j_group2 == "sog") %>%
# ocean entry year herring abundance
left_join(.,
herr_year0 %>%
select(year = ck_ocean_year0, herr_abund_OEY = herr_age0_abund),
by = "year") %>%
# ocean entry year + 1 herring abundance
left_join(.,
herr_year1 %>%
rename(year = ck_ocean_year1),
by = "year") %>%
# ocean entry year oceanography during priming period (April-July)
left_join(.,
sog_ocean %>%
rename(year = ck_ocean_year0),
by = "year") %>%
# define oey1 herring abundance based on adult distribution
mutate(
herr_abund_OEY1 = case_when(
a_group2 == "south" ~ herr_abund_OEY1_south,
a_group2 == "offshore" ~ herr_abund_OEY1_north,
a_group2 == "north" ~ herr_abund_OEY1_north
)
) %>%
# rkw abundance
left_join(.,
rkw %>%
select(stock, brood_year, rollmean_rkw, rollmean_rkw2),
by = c("brood_year", "stock")) %>%
# scale covariates
mutate(
herr_OEY_z = as.numeric(scale(herr_abund_OEY)),
herr_OEY1_z = as.numeric(scale(herr_abund_OEY1)),
rkw_z = as.numeric(scale(rollmean_rkw)),
rkw_z2 = as.numeric(scale(rollmean_rkw2)),
sst_z = as.numeric(scale(prime_entrance_sst)),
sal_z = as.numeric(scale(prime_entrance_salinity)),
bloom_z = as.numeric(scale(bloom_day))
) %>%
select(stock, stock_name, brood_year, a_group2, gen_length, gen_z,
herr_abund_OEY, herr_abund_OEY1, rollmean_rkw, herr_OEY_z, herr_OEY1_z,
rkw_z, rkw_z2, sst_z, sal_z, bloom_z) %>%
# remove missing data
filter(!is.na(rkw_z)#,
# !is.na(sst_z)
)
# equivalent model to k_h_hj_mod
mod <- gam(gen_length ~ s(rkw_z2, by = a_group2, m = 2, bs = "tp", k = 3) +
s(rkw_z2, by = stock, m = 1, bs = "tp", k = 3) +
s(herr_OEY1_z, m = 2, bs = "tp", k = 3) +
s(herr_OEY_z, m = 2, bs = "tp", k = 3) +
s(herr_OEY_z, by = stock, m = 1, bs = "tp", k = 3) +
s(stock, bs = "re"),
data = dat,
method = "REML",
family=Gamma(link="log"))
## Check fit (note that fit is on scale of observations so unlikely to violate
# assumption in link space)
fit_preds <- predict(mod, newdata = dat, se.fit = TRUE,
newdata.guaranteed = TRUE)
fit_dat <- dat %>%
mutate(link_fit = as.numeric(fit_preds$fit),
link_se = as.numeric(fit_preds$se.fit),
link_lo = link_fit + (qnorm(0.025) * link_se),
link_up = link_fit + (qnorm(0.975) * link_se),
pred_gen = exp(link_fit),
pred_gen_lo = exp(link_fit + (qnorm(0.025) * link_se)),
pred_gen_up = exp(link_fit + (qnorm(0.975) * link_se))
)
ggplot(data = fit_dat, aes(x = log(gen_length), y = link_fit)) +
geom_abline(linetype = 2, color = "grey50", size = .5) +
geom_point(aes(color = brood_year), size = 1.5, alpha = 3/4) +
geom_linerange(aes(ymin = link_lo,
ymax = link_up),
size = 1/2, color = "firebrick4") +
labs(x = "Observed Generation Length",
y = "Predicted Generation Length") +
theme_bw()
# function to generate predictions
gen_pred <- function(mod_in, dat_in, random = FALSE) {
if (random == FALSE) {
preds <- predict(mod_in, dat_in, se.fit = TRUE,
exclude = excl_pars[grepl("stock", excl_pars)],
newdata.guaranteed = TRUE)
} else {
preds <- predict(mod_in, dat_in, se.fit = TRUE,
newdata.guaranteed = TRUE)
}
#remove zero columns
dat_out <- dat_in[c(-2, -3)] %>%
mutate(link_fit = as.numeric(preds$fit),
link_se = as.numeric(preds$se.fit),
pred_gen = exp(link_fit),
pred_gen_lo = exp(link_fit + (qnorm(0.025) * link_se)),
pred_gen_up = exp(link_fit + (qnorm(0.975) * link_se))
)
colnames(dat_out)[1] <- "cov1"
return(dat_out)
}
# input vectors
excl_pars <- map(mod$smooth, function(x) x$label) %>% unlist
herr0_seq <- herr1_seq <- rkw_seq <- seq(-2, 2, length.out = 99)
# stock-specific averages for each covariate
stock_means <- dat %>%
group_by(stock, a_group2) %>%
summarize(herr_OEY_z = mean(herr_OEY_z),
herr_OEY1_z = mean(herr_OEY1_z),
rkw_z2 = mean(rkw_z2),
.groups = "drop") %>%
ungroup()
# make mixed effects predictions using stock mean values
# note that order of covariates in DF varies and is important
mixed_preds_herr0 <- expand.grid(herr_OEY_z = herr0_seq,
stock = unique(dat$stock),
var = "herr0") %>%
left_join(., stock_means %>% select(-herr_OEY_z), by = "stock") %>%
select(herr_OEY_z, herr_OEY1_z, rkw_z2, stock, var, a_group2)
mixed_preds_herr1 <- expand.grid(herr_OEY1_z = herr1_seq,
stock = unique(dat$stock),
var = "herr1") %>%
left_join(., stock_means %>% select(-herr_OEY1_z), by = "stock") %>%
select(herr_OEY1_z, herr_OEY_z, rkw_z2, stock, var, a_group2)
mixed_preds_rkw <- expand.grid(rkw_z2 = rkw_seq,
stock = unique(dat$stock),
var = "rkw") %>%
left_join(., stock_means %>% select(-rkw_z2), by = "stock") %>%
select(rkw_z2, herr_OEY_z, herr_OEY1_z, stock, var, a_group2)
mixed_pred_list1 <- list(herr0 = mixed_preds_herr0,
herr1 = mixed_preds_herr1,
rkw = mixed_preds_rkw)
## mixed effects predictions for plotting
mixed_pred_dat <- map(mixed_pred_list1, function (x) {
gen_pred(mod, x, random = TRUE)
}) %>%
bind_rows() %>%
# left_join(., dat %>% select(stock, a_group2), by = "stock") %>%
mutate(a_group2 = fct_relevel(a_group2, "offshore", "north", "broad",
"south"))
fixed_pred_list1 <- map(mixed_pred_list1, function(x) {
#replace stock-specific covariates with 0s
x[, 2] <- 0
x[, 3] <- 0
x %>%
select(-stock) %>%
# adult grouping predictions only relevant for rkw
mutate(a_group2 = ifelse(var == "rkw", as.character(a_group2), "south")) %>%
distinct()
})
fixed_pred_dat <- map(fixed_pred_list1, function (x) {
gen_pred(mod, x, random = FALSE)
}) %>%
bind_rows() %>%
distinct() %>%
mutate(a_group2 = fct_relevel(a_group2, "offshore", "north", "south"))
# plot fixed effects (separate panels because rkw need to be plotted by
# a_group)
fe_splines1 <- fixed_pred_dat %>%
filter(var %in% c("herr0", "herr1")) %>%
ggplot(., aes(x = cov1)) +
geom_line(aes(y = pred_gen)) +
geom_ribbon(aes(ymin = pred_gen_lo, ymax = pred_gen_up),
alpha = 0.3) +
ggsidekick::theme_sleek() +
facet_wrap(~var) +
lims(y = c(min(fixed_pred_dat$pred_gen_lo),
max(fixed_pred_dat$pred_gen_up))) +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank())
fe_splines2 <- fixed_pred_dat %>%
filter(var == "rkw") %>%
mutate(rkw_eff = paste(var, a_group2, sep = "_")) %>%
ggplot(., aes(x = cov1)) +
geom_line(aes(y = pred_gen, colour = a_group2)) +
geom_ribbon(aes(ymin = pred_gen_lo, ymax = pred_gen_up, fill = a_group2),
alpha = 0.3) +
ggsidekick::theme_sleek() +
facet_wrap(~fct_reorder(rkw_eff, as.numeric(a_group2))) +
lims(y = c(min(fixed_pred_dat$pred_gen_lo),
max(fixed_pred_dat$pred_gen_up))) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank())
p <- ggpubr::ggarrange(fe_splines1, fe_splines2, nrow = 2)
png(here::here("figs", "gam", "gen_gam", "herr_rkw_fe_splines.png"),
height = 5.5, width = 7.5, res = 300, units = "in")
ggpubr::annotate_figure(p, bottom = "Z-Scaled Predictor",
left = "Predicted Generation Length")
dev.off()
