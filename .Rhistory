grepl("nu", parameter))
}
pull_par_f(surv_dfa[[1]]) %>% glimpse
# pull pars
pull_par_f <- function(x) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter))
}
pull_par_f(surv_dfa[[1]]) %>% glimpse
# survival pars
surv_pars <- map2(surv_dfa, surv_tbl$group, pull_par_f) %>%
bind_rows() %>%
glimpse()
# pull pars
pull_par_f <- function(x, group) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter)) %>%
mutate(group = group)
}
# survival pars
surv_pars <- map2(surv_dfa, surv_tbl$group, pull_par_f) %>%
bind_rows() %>%
glimpse()
surv_pars %>%
mutate(
trend = case_when(
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2",
TRUE ~ NA
)
) %>%
glimpse()
surv_pars %>%
mutate(
trend = case_when(
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2",
TRUE ~ NA_character_
)
) %>%
glimpse()
surv_pars <- surv_pars %>%
mutate(
trend = case_when(
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2",
TRUE ~ NA_character_
)
) %>%
glimpse()
tt <- surv_pars$parameter[1:5]
str_split(tt, "[")
str_split(tt, "[}")
str_split(tt, "[]")
str_split
str_split(tt, "[", n = 2)
str_split(tt, "\\[", n = 2)
# survival pars
surv_pars <- map2(surv_dfa, surv_tbl$group, pull_par_f) %>%
bind_rows() %>%
mutate(
trend = case_when(
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2",
TRUE ~ NA_character_
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
TRUE ~ parameter
)
)
ggplot(surv_pars, aes(x = group, y = value, fill = trend)) +
# scale_alpha_continuous(name = "Probability\nDifferent") +
# scale_fill_discrete(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
# xlab("Time Series") +
# ylab("Loading") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter)
ggplot(surv_pars, aes(x = group, y = value, fill = trend)) +
# scale_alpha_continuous(name = "Probability\nDifferent") +
# scale_fill_discrete(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
# xlab("Time Series") +
# ylab("Loading") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_y")
ggplot(surv_pars, aes(x = group, y = value, fill = trend)) +
# scale_alpha_continuous(name = "Probability\nDifferent") +
# scale_fill_discrete(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
# xlab("Time Series") +
# ylab("Loading") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_x")
# survival pars
surv_pars <- map2(surv_dfa, surv_tbl$group, pull_par_f) %>%
bind_rows() %>%
mutate(
trend = case_when(
grepl("nu", parameter) ~ "Trend 1 and 2",
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2"
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
grepl("nu", parameter) ~ "nu",
TRUE ~ parameter
)
)
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
# scale_alpha_continuous(name = "Probability\nDifferent") +
# scale_fill_discrete(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
# xlab("Time Series") +
# ylab("Loading") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_x")
# pull pars
pull_par_f <- function(x, group) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter)) %>%
mutate(group = group)
}
# survival pars
surv_pars <- map2(surv_dfa, group_labs, pull_par_f) %>%
bind_rows() %>%
mutate(
trend = case_when(
grepl("nu", parameter) ~ "Trend 1 and 2",
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2"
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
grepl("nu", parameter) ~ "nu",
TRUE ~ parameter
)
)
group_labs <- c("North\nYearling", "Puget\nSubyearling", "Puget\nYearling",
"SoG\nSubyearling", "South\nSubyearling")
# pull pars
pull_par_f <- function(x, group) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter)) %>%
mutate(group = group,
trend = case_when(
grepl("nu", parameter) ~ "Trend 1 and 2",
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2"
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
grepl("nu", parameter) ~ "nu",
TRUE ~ parameter
))
}
# survival pars
surv_pars <- map2(surv_dfa, group_labs, pull_par_f) %>%
bind_rows()
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
# scale_alpha_continuous(name = "Probability\nDifferent") +
# scale_fill_discrete(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
# xlab("Time Series") +
# ylab("Loading") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
xlab("Posterior Estimate") +
ylab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
xlab("Posterior Estimate") +
ylab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
theme(#axis.text.y = element_text(angle = 45, vjust = -1, size = 7),
axis.title = element_blank()) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
xlab("Posterior Estimate") +
ylab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
?geom_violin()
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = c(0.1, 0.5, 0.9)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = c(0.1, 0.5, 0.9),
lty = c(2, 1, 2)) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_pars <- map2(gen_dfa, group_labs, pull_par_f) %>%
bind_rows()
ggplot(gen_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_pars %>% filter(is.na(phi)) %>% glimpse()
gen_pars %>% filter(parameter == "phi" & is.na(value)) %>% glimpse()
gen_pars %>% filter(parameter == "psi" & is.na(value)) %>% glimpse()
pdf(here::here("figs", "pars_both_vars.pdf"), height = 7, width = 4)
surv_par_plot
gen_par_plot
dev.off()
surv_par_plot <- ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_par_plot <- ggplot(gen_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
pdf(here::here("figs", "pars_both_vars.pdf"), height = 7, width = 4)
surv_par_plot
gen_par_plot
dev.off()
pdf(here::here("figs", "pars_both_vars.pdf"))
surv_par_plot
gen_par_plot
dev.off()
surv_par_plot <- ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_par_plot <- ggplot(gen_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
pdf(here::here("figs", "pars_both_vars.pdf"))
surv_par_plot
gen_par_plot
dev.off()
rotate_trends
# pull pars
pull_par_f <- function(x, group) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter)) %>%
mutate(group = group,
trend = case_when(
grepl("nu", parameter) ~ "Trend 1 and 2",
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2"
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
grepl("nu", parameter) ~ "nu",
TRUE ~ parameter
),
y_int = ifelse(paramter == "nu", 10, 0))
}
# survival pars
surv_pars <- map2(surv_dfa, group_labs, pull_par_f) %>%
bind_rows()
# pull pars
pull_par_f <- function(x, group) {
as_tibble(x$samples, rownames = "iterations") %>%
pivot_longer(cols = -iterations,
names_sep = "\\.",
names_to = c("chains", "parameter")) %>%
filter(grepl("psi", parameter) | grepl("phi", parameter) |
grepl("nu", parameter)) %>%
mutate(group = group,
trend = case_when(
grepl("nu", parameter) ~ "Trend 1 and 2",
grepl("[1]", parameter) ~ "Trend 1",
grepl("[2]", parameter) ~ "Trend 2"
),
parameter = case_when(
grepl("psi", parameter) ~ "psi",
grepl("phi", parameter) ~ "phi",
grepl("nu", parameter) ~ "nu",
TRUE ~ parameter
),
y_int = ifelse(parameter == "nu", 10, 0))
}
# survival pars
surv_pars <- map2(surv_dfa, group_labs, pull_par_f) %>%
bind_rows()
surv_par_plot <- ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(yintercept = y_int, lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
glimpse(surv_pars)
surv_par_plot <- ggplot(surv_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(aes(yintercept = y_int), lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
surv_par_plot
gen_par_plot <- ggplot(gen_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(aes(yintercept = y_int), lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_par_plot
gen_pars <- map2(gen_dfa, group_labs, pull_par_f) %>%
bind_rows()
gen_par_plot <- ggplot(gen_pars,
aes(x = group, y = value, fill = trend)) +
scale_fill_brewer(name = "", palette = "Set2") +
geom_violin(position = position_dodge(0.3),
draw_quantiles = 0.5) +
geom_hline(aes(yintercept = y_int), lty = 2) +
coord_flip() +
ylab("Posterior Estimate") +
xlab("Stock Grouping") +
# scale_y_continuous(expand = c(0, 0)) +
ggsidekick::theme_sleek() +
guides(alpha = guide_legend(override.aes = list(fill = "grey"))) +
facet_wrap(~parameter, scales = "free_x")
gen_par_plot
pdf(here::here("figs", "pars_both_vars.pdf"))
surv_par_plot
gen_par_plot
dev.off()
