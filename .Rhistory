gen_tbl %>% select(-rot_gen:regime_trend1)
gen_tbl %>% select(-(rot_gen:regime_trend1))
gen_tbl %>% select(-(rot_gen, regime_trend1, regime_trend2))
gen_tbl %>% select(-c(rot_gen, regime_trend1, regime_trend2))
saveRDS(gen_tbl %>% select(-c(rot_gen, regime_trend1, regime_trend2)),
here::here("data", "generation_fits", "gen_tbl.RDS"))
saveRDS(gen_tbl, here::here("data", "generation_fits", "gen_tbl2.RDS"))
hmm_lsit_g <- hmm_list
surv_tbl
hmm_list_m <- furrr::future_map(surv_tbl$rot_surv, regime_f)
map(hmm_list_m, function(x) {
map(x, ~.$table)
} )
map(hmm_list_m, function(x) {
map(x, function (y) plot_regime_model(y$best_model))
} )
map(hmm_list_m, function(x) {
map(x, function (y) plot_regime_model(y$best_model))
} )
map(hmm_list_m, function(x) {
map(x, ~.$table)
} )
hmm_list_m <- furrr::future_map(surv_tbl$rot_surv, regime_f)
surv_tbl
# test for evidence of regimes
regime_f <- function(rots_in) {
dum <- vector(nrow(rots_in$trends_mean), mode = "list")
for(i in 1:nrow(rots_in$trends_mean)) {
dum[[i]] <- find_regimes(
rots_in$trends_mean[i, ],
sds = (rots_in$trends_upper - rots_in$trends_mean)[i, ] / 1.96,
max_regimes = 2,
iter = 3000,
control = list(adapt_delta = 0.99, max_treedepth = 20)
)
}
return(dum)
}
ncores <- parallel::detectCores()
future::plan(future::multisession, workers = ncores - 2)
# test for evidence of regimes
regime_f <- function(rots_in) {
dum <- vector(nrow(rots_in$trends_mean), mode = "list")
for(i in 1:nrow(rots_in$trends_mean)) {
dum[[i]] <- find_regimes(
rots_in$trends_mean[i, ],
sds = (rots_in$trends_upper - rots_in$trends_mean)[i, ] / 1.96,
max_regimes = 2,
iter = 3000,
control = list(adapt_delta = 0.99, max_treedepth = 20)
)
}
return(dum)
}
hmm_list_m <- furrr::future_map(surv_tbl$rot_surv, regime_f)
library(MARSS)
library(tidyverse)
ncores <- parallel::detectCores()
future::plan(future::multisession, workers = ncores - 2)
surv <- readRDS(here::here("data/salmonData/cwt_indicator_surv_clean.RDS")) %>%
#remove stocks that are aggregates of others on CP's advice
# TST combines STI/TAK and AKS combines SSA and NSA
filter(!stock %in% c("TST", "AKS"),
year < 2017) %>%
group_by(stock) %>%
mutate(M_z = as.numeric(scale(M)),
M_cent = as.numeric(scale(M, center = TRUE, scale = FALSE)),
gen_cent = as.numeric(scale(gen_length, center = TRUE,
scale = FALSE))) %>%
ungroup() %>%
droplevels()
# dataframe of only stocks and juvenile groupings
stk_tbl <- surv %>%
ungroup() %>%
select(stock, stock_name, smolt, run,
j_group1:j_group4, a_group1:a_group4, j_group4b:j_group1b) %>%
distinct()
library(bayesdfa)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#helper function to spread and label input matrices for bayesdfa
make_mat <- function(x) {
mat1 <- x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
as.matrix()
out_mat <- t(mat1[, 2:ncol(mat1)])
colnames(out_mat) <- mat1[, "year"]
return(out_mat)
}
# number of stocks per group
kept_grps <- stk_tbl %>%
group_by(j_group3b) %>%
tally() %>%
filter(n > 2) %>%
droplevels()
#generate tbl by group with up to two trends
surv_tbl <- tibble(group = levels(surv$j_group3b)) %>%
mutate(
m_mat = surv %>%
filter(!is.na(M)) %>%
group_split(j_group3b) %>%
map(., make_mat)
) %>%
filter(group %in% kept_grps$j_group3b)
surv_tbl$names <- map(surv_tbl$m_mat, function (x) {
data.frame(stock = row.names(x)) %>%
left_join(., surv %>% select(stock, stock_name) %>% distinct(),
by = "stock")
})
surv_tbl$years <- map(surv_tbl$m_mat, function (x) {
as.numeric(colnames(x))
})
# read outputs
dfa_fits <- map(surv_tbl$group, function(y) {
f_name <- paste(y, "two-trend", "bayesdfa_c.RDS", sep = "_")
readRDS(here::here("data", "mortality_fits", f_name))
})
# rotate trends and add to surv_tbl (keep DFA separate because they're huge)
surv_tbl$rot_surv <- map(dfa_fit, rotate_trends)
# rotate trends and add to surv_tbl (keep DFA separate because they're huge)
surv_tbl$rot_surv <- map(dfa_fits, rotate_trends)
# test for evidence of regimes
regime_f <- function(rots_in) {
dum <- vector(nrow(rots_in$trends_mean), mode = "list")
for(i in 1:nrow(rots_in$trends_mean)) {
dum[[i]] <- find_regimes(
rots_in$trends_mean[i, ],
sds = (rots_in$trends_upper - rots_in$trends_mean)[i, ] / 1.96,
max_regimes = 2,
iter = 3000,
control = list(adapt_delta = 0.99, max_treedepth = 20)
)
}
return(dum)
}
hmm_list_m <- furrr::future_map(surv_tbl$rot_surv, regime_f)
warnings()
map(hmm_list_m, function(x) {
map(x, ~.$table)
} )
map(hmm_list_m, function(x) {
map(x, function (y) plot_regime_model(y$best_model))
} )
surv_tbl$regime_trend1 <- map(hmm_list_m, function(x) x[[1]]$best_model)
surv_tbl$regime_trend2 <- map(hmm_list_m, function(x) x[[2]]$best_model)
#export
saveRDS(surv_tbl, here::here("data", "mortality_fits", "surv_tbl.RDS"))
library(tidyverse)
library(bayesdfa)
library(grid)
library(gridExtra)
# import juvenile mortality data
surv_tbl <- readRDS(here::here("data", "mortality_fits", "surv_tbl.RDS"))
surv_dfa <- map(surv_tbl$group, function(y) {
f_name <- paste(y, "two-trend", "bayesdfa_c.RDS", sep = "_")
# f_name <- paste(y, "two-trend", "bayesdfa_c.RDS", sep = "_")
readRDS(here::here("data", "mortality_fits", f_name))
})
# import mean gen length
gen_tbl <- readRDS(here::here("data", "generation_fits", "gen_tbl.RDS"))
gen_dfa <- map(gen_tbl$group, function(y) {
f_name <- paste(y, "two-trend", "bayesdfa_c.RDS", sep = "_")
# f_name <- paste(y, "two-trend", "bayesdfa_c.RDS", sep = "_")
readRDS(here::here("data", "generation_fits", f_name))
})
surv_tbl
gen_tbl1
gen_tbl
plot_regime_model(gen_tbl$regime_trend1[[1]])
## function to regime model fit for plotting
regime_model <- gen_tbl$regime_trend1[[1]]
plot_regime_model
plot_regime_model(gen_tbl$regime_trend1[[1]], type = "means")
plot_regime_model(gen_tbl$regime_trend1[[1]], type = "probability")
plot_regime_model(gen_tbl$regime_trend1[[1]], type = "probability", plot_prob_indices=c(2))
plot_regime_model(gen_tbl$regime_trend1[[1]], type = "probability", plot_prob_indices=c(1))
plot_regime_model(gen_tbl$regime_trend1[[1]], type = "probability")
gamma_tk <- rstan::extract(regime_model$model, pars = "gamma_tk")[[1]]
mu_k <- rstan::extract(regime_model$model, pars = "mu_k")[[1]]
l <- apply(gamma_tk, 2:3, quantile, probs = probs[[1]])
u <- apply(gamma_tk, 2:3, quantile, probs = probs[[2]])
gamma_tk <- rstan::extract(regime_model$model, pars = "gamma_tk")[[1]]
probs = c(0.05, 0.95)
regime_prob_threshold = 0.9
gamma_tk <- rstan::extract(regime_model$model, pars = "gamma_tk")[[1]]
mu_k <- rstan::extract(regime_model$model, pars = "mu_k")[[1]]
l <- apply(gamma_tk, 2:3, quantile, probs = probs[[1]])
u <- apply(gamma_tk, 2:3, quantile, probs = probs[[2]])
med <- apply(gamma_tk, 2:3, quantile, probs = 0.5)
range01 <- function(x) (x - min(x))/(max(x) - min(x))
mu_k_low <- apply(mu_k, 2, quantile, probs = probs[[1]])
mu_k_high <- apply(mu_k, 2, quantile, probs = probs[[2]])
mu_k <- apply(mu_k, 2, median)
confident_regimes <- apply(gamma_tk, 2:3, function(x) mean(x >
0.5) > regime_prob_threshold)
confident_regimes <- apply(
gamma_tk, 2:3, function(x) mean(x > 0.5) > regime_prob_threshold
)
regime_indexes <- apply(confident_regimes, 1, function(x) {
w <- which(x)
if (length(w) == 0)
NA
else w
})
regime_indexes
confident_regimes
gamma_tk <- rstan::extract(regime_model$model, pars = "gamma_tk")[[1]]
mu_k <- rstan::extract(regime_model$model, pars = "mu_k")[[1]]
l <- apply(gamma_tk, 2:3, quantile, probs = probs[[1]])
u <- apply(gamma_tk, 2:3, quantile, probs = probs[[2]])
med <- apply(gamma_tk, 2:3, quantile, probs = 0.5)
range01 <- function(x) (x - min(x))/(max(x) - min(x))
mu_k_low <- apply(mu_k, 2, quantile, probs = probs[[1]])
mu_k_high <- apply(mu_k, 2, quantile, probs = probs[[2]])
mu_k <- apply(mu_k, 2, median)
confident_regimes <- apply(
gamma_tk, 2:3, function(x) mean(x > 0.5) > regime_prob_threshold
)
confident_regimes
regime_prob_threshold
apply(confident_regimes, 1, function(x) {
w <- which(x)
if (length(w) == 0)
NA
else w
})
confident_regimes
which(FALSE)
plot_regime_model
df_l <- reshape2::melt(l, varnames = c("Time", "State"),
value.name = "lwr")
df_u <- reshape2::melt(u, varnames = c("Time", "State"),
value.name = "upr")
df_m <- reshape2::melt(med, varnames = c("Time", "State"),
value.name = "median")
df_y <- data.frame(y = range01(model$y), Time = seq_along(model$y))
df_y <- data.frame(y = range01(regime_model$y),
Time = seq_along(regime_model$y))
dplyr::inner_join(df_l, df_u, by = c("Time", "State")) %>%
dplyr::inner_join(df_m, by = c("Time", "State")) %>%
dplyr::filter(.data$State %in% plot_prob_indices) %>%
dplyr::mutate(State = paste("State", .data$State))
plot_prob_indices <- seq_len(ncol(med))
dplyr::inner_join(df_l, df_u, by = c("Time", "State")) %>%
dplyr::inner_join(df_m, by = c("Time", "State")) %>%
dplyr::filter(.data$State %in% plot_prob_indices) %>%
dplyr::mutate(State = paste("State", .data$State))
years <- gen_tbl$years[[1]]
years
dplyr::inner_join(df_l, df_u, by = c("Time", "State")) %>%
dplyr::inner_join(df_m, by = c("Time", "State")) %>%
dplyr::filter(.data$State %in% plot_prob_indices) %>%
dplyr::mutate(State = paste("State", .data$State),
time = rep(years, length(unique(State))))
# plotting functions
source(here::here("R", "functions", "plotting_functions.R"))
prep_regime(gen_tbl$regime_trend1[[1]], group = gen_tbl$group[[1]],
years = gen_tbl$years[[1]])
surv_regimes <- pmap(
list(surv_tbl$regime_trend1, surv_tbl$years, group_labs),
.f = prep_trends
) %>%
bind_rows() %>%
mutate(var = "Juvenile Mortality Rate") %>%
glimpse()
?pmap
surv_regimes <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_trends
) %>%
bind_rows() %>%
mutate(var = "Juvenile Mortality Rate") %>%
glimpse()
surv_tbl
group_labs
prep_regime(gen_tbl$regime_trend1[[1]], group = group_labs[[1]],
years = gen_tbl$years[[1]])
surv_regimes <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_trends
)
surv_regimes <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(var = "Juvenile Mortality Rate") %>%
glimpse()
# plotting functions
source(here::here("R", "functions", "plotting_functions.R"))
gen_regimes <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(var = "Mean Age")
glimpse(gen_regimes)
regimes <- rbind(surv_regimes, gen_regimes) %>%
mutate(var = as.factor(var),
state = as.factor(State),
life_history = case_when(
grepl("Sub", group) ~ "subyearling",
TRUE ~ "yearling"
),
group = fct_relevel(as.factor(group), "North\nYearling",
"SoG\nSubyearling", "Puget\nYearling",
"Puget\nSubyearling", "South\nSubyearling"),
var = fct_relevel(as.factor(var), "Juvenile Mortality Rate",
"Mean Age")
)
surv_regimes <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(var = "Juvenile Mortality Rate")
gen_regimes <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(var = "Mean Age")
regimes <- rbind(surv_regimes, gen_regimes) %>%
mutate(var = as.factor(var),
state = as.factor(State),
life_history = case_when(
grepl("Sub", group) ~ "subyearling",
TRUE ~ "yearling"
),
group = fct_relevel(as.factor(group), "North\nYearling",
"SoG\nSubyearling", "Puget\nYearling",
"Puget\nSubyearling", "South\nSubyearling"),
var = fct_relevel(as.factor(var), "Juvenile Mortality Rate",
"Mean Age")
)
glimpse(regimes)
regimes <- rbind(surv_regimes, gen_regimes) %>%
mutate(var = as.factor(var),
state = as.factor(State),
life_history = case_when(
grepl("Sub", group) ~ "subyearling",
TRUE ~ "yearling"
),
group = fct_relevel(as.factor(group), "North\nYearling",
"SoG\nSubyearling", "Puget\nYearling",
"Puget\nSubyearling", "South\nSubyearling"),
var = fct_relevel(as.factor(var), "Juvenile Mortality Rate",
"Mean Age")
) %>%
ungroup()
glimpse(regimes)
plot_regime_model()
plot_regime_model
regime_dat <- regimes %>% filter(State == "State 1", group == group_labs[1])
head(regime_dat)
ggplot(regime_dat,
aes_string(x = "time", y = "median")) +
geom_ribbon(aes_string(ymin = "lwr", ymax = "upr", colour = "life_history",
fill = "life_history"),
alpha = 0.4) +
geom_line(aes_string(colour = "life_history"), size = 1.2, lty = 2)
regime_dat
regime_dat <- regimes %>% filter(State == "State 1", group == group_labs[1], var == "Mean Age")
ggplot(regime_dat,
aes_string(x = "time", y = "median")) +
geom_ribbon(aes_string(ymin = "lwr", ymax = "upr", colour = "life_history",
fill = "life_history"),
alpha = 0.4) +
geom_line(aes_string(colour = "life_history"), size = 1.2, lty = 2)
ggplot(regime_dat,
aes_string(x = "time", y = "median")) +
geom_ribbon(aes_string(ymin = "lwr", ymax = "upr", colour = "life_history",
fill = "life_history"),
alpha = 0.4, lty = 2) +
geom_line(aes_string(colour = "life_history"), size = 1.2, lty = 2) +
scale_colour_brewer(type = "qual", name = "") +
scale_fill_brewer(type = "qual", name = "") +
xlab("Brood Year") +
ylab("Probability of Regime 1") +
scale_x_continuous(limits = c(1972, 2016), expand = c(0, 0)) +
# facet_grid(group ~ var) +
ggsidekick::theme_sleek() +
theme(legend.position = "top")
# plotting functions
source(here::here("R", "functions", "plotting_functions.R"))
plot_one_regime(regimes %>% filter(State == "State 1"))
plot_one_regime(regimes %>% filter(State == "State 2"))
surv_regimes1 <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "One")
surv_regimes2 <- pmap(
list(regime_model = surv_tbl$regime_trend1, years = surv_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "Two")
surv_regimes <- rbind(surv_regimes1, surv_regimes2) %>%
mutate(var = "Juvenile Mortality Rate")
gen_regimes1 <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "One")
gen_regimes2 <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "Two")
surv_regimes2 <- pmap(
list(regime_model = surv_tbl$regime_trend2, years = surv_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "Two")
surv_regimes <- rbind(surv_regimes1, surv_regimes2) %>%
mutate(var = "Juvenile Mortality Rate")
gen_regimes1 <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "One")
gen_regimes2 <- pmap(
list(regime_model = gen_tbl$regime_trend2, years = gen_tbl$years,
group = group_labs),
.f = prep_regime
) %>%
bind_rows() %>%
mutate(trend = "Two")
gen_regimes <- rbind(gen_regimes1, gen_regimes2) %>%
mutate(var = "Mean Age")
regimes <- rbind(surv_regimes, gen_regimes) %>%
mutate(var = as.factor(var),
state = as.factor(State),
life_history = case_when(
grepl("Sub", group) ~ "subyearling",
TRUE ~ "yearling"
),
group = fct_relevel(as.factor(group), "North\nYearling",
"SoG\nSubyearling", "Puget\nYearling",
"Puget\nSubyearling", "South\nSubyearling"),
var = fct_relevel(as.factor(var), "Juvenile Mortality Rate",
"Mean Age")
)
plot_one_regime(regimes %>% filter(trend == "One", State == "State 1"))
plot_one_regime(regimes %>% filter(trend == "Two", State == "State 1"))
plot_regime_model
# plotting functions
source(here::here("R", "functions", "plotting_functions.R"))
gen_regimes1 <- pmap(
list(regime_model = gen_tbl$regime_trend1, years = gen_tbl$years,
group = group_labs),
.f = prep_regime,
flip_regimes = TRUE
) %>%
bind_rows() %>%
mutate(trend = "One")
gen_regimes2 <- pmap(
list(regime_model = gen_tbl$regime_trend2, years = gen_tbl$years,
group = group_labs),
.f = prep_regime,
flip_regimes = TRUE
) %>%
bind_rows() %>%
mutate(trend = "Two")
gen_regimes <- rbind(gen_regimes1, gen_regimes2) %>%
mutate(var = "Mean Age")
regimes <- rbind(surv_regimes, gen_regimes) %>%
mutate(var = as.factor(var),
state = as.factor(State),
life_history = case_when(
grepl("Sub", group) ~ "subyearling",
TRUE ~ "yearling"
),
group = fct_relevel(as.factor(group), "North\nYearling",
"SoG\nSubyearling", "Puget\nYearling",
"Puget\nSubyearling", "South\nSubyearling"),
var = fct_relevel(as.factor(var), "Juvenile Mortality Rate",
"Mean Age")
)
plot_one_regime(regimes %>% filter(State == "State 1" & trend == "One"))
plot_one_trend(trends %>% filter(State == "State 1" & trend == "Two"))
plot_one_regime(regime %>% filter(State == "State 1" & trend == "Two"))
plot_one_regime(regimes %>% filter(State == "State 1" & trend == "Two"))
plot_one_regime(regimes %>% filter(State == "State 1" & trend == "One"))
png(here::here("figs", "ms_figs", "regime_trend1.png"), height = 7, width = 4,
res = 300, units = "in")
plot_one_regime(regimes %>% filter(State == "State 1" & trend == "One"))
dev.off()
png(here::here("figs", "ms_figs", "regime_trend2.png"), height = 7, width = 4,
res = 300, units = "in")
plot_one_regime(regimes %>% filter(State == "State 1" & trend == "Two"))
dev.off()
