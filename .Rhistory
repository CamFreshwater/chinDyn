),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY)
#focus on subset of BC pops for initial analyses
make_mat <- function(x) {
x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
select(-year) %>%
as.matrix() %>%
t()
}
m_mat <- make_mat(surv)
# evaluate up to 3 trends per group
surv_tbl <- readRDS(here::here("data", "dfaBayesFits", "group_top_models.rds"))
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG")
scale(seals$mean)
scale(seals$mean)[, 1]
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG") %>%
mutate(z_mean = scale(mean)[, 1])
head(seals)
surv_tbl$m_mat[[1]]
seq(1, ncol(tt))
tt <- surv_tbl$m_mat[[1]]
seq(1, ncol(tt))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1)
seal_cov
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = seals$z_mean)
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
nrow(tt)
range(seals$year)
range(surv$year)
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG",
!year < 1972) %>%
mutate(z_mean = scale(mean)[, 1])
range(seals$year)
# make new surv tbl with trimmed years
surv_trim3 <- surv %>%
filter(!group %in% c("north_oceantype", "south_streamtype")) %>%
filter(!year > 2014)
length(unique(seals$year))
length(unique(surv$year))
length(unique(surv_trim3$year))
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat)
)
surv_tbl$m_mat[[1]]
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
tt <- surv_tbl$m_mat[[1]]
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
seal_cov
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(.$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat)#,
# # reformat seal covariate to match bayes dfa input
# seal_cov = map(.$m_mat, function (x) {
#   expand.grid("time" = seq(1, ncol(x)),
#               "timeseries" = seq(1, nrow(x)),
#               "covariates" = 1) %>%
#     mutate(value = rep(seals$z_mean, times = nrow(x)))
# })
)
seal_cov = map(surv_tbl$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(surv_tbl$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariates" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
head(seal_cov)
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
require(tidyverse)
allmypackages <- as.data.frame(installed.packages())
allmypackages <- allmypackages %>%
filter(Priority != "base" | is.na(Priority)) %>%
select(-c(Enhances:MD5sum, LinkingTo:Suggests)) %>%
droplevels()
str(allmypackages)
package_source <- function(pkg){
x <- as.character(packageDescription(pkg)$Repository)
if (length(x) == 0) {
y <- as.character(packageDescription(pkg)$GithubRepo)
z <- as.character(packageDescription(pkg)$GithubUsername)
if (length(y) == 0) {
return("Other")
} else {
return(str_c("GitHub repo = ",
z,
"/",
y))
}
} else {
return(x)
}
}
# show the first 60 as an example
head(sapply(allmypackages$Package,
package_source),
60)
allmypackages$whereat <- sapply(allmypackages$Package,
package_source)
str(allmypackages)
table(allmypackages$whereat)
allmypackages %>%
filter(whereat == "Other") %>%
select(Package, Version)
write.csv(allmypackages, "mypackagelistApril2020.csv")
library(tidyverse)
library(rstan)
library(bayesdfa)
#helper functions to fit and post-process DFA
source(here("R/functions/dfaFunctions.R"))
#helper functions to fit and post-process DFA
source(here::here("R/functions/dfaFunctions.R"))
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(
M = -log(surv),
agg_reg = case_when(
(is.na(lat)) ~ "north",
(lat > 52 & !region == "UFR") ~ "north",
(region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI")) ~ "south",
TRUE ~ "SS"
),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY)
#focus on subset of BC pops for initial analyses
make_mat <- function(x) {
x %>%
select(year, stock, M) %>%
spread(key = stock, value = M) %>%
select(-year) %>%
as.matrix() %>%
t()
}
m_mat <- make_mat(surv)
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG",
!year < 1972) %>%
mutate(z_mean = scale(mean)[, 1])
# make new survival tbl with trimmed years and seal covariate
surv_trim3 <- surv %>%
filter(!group %in% c("north_oceantype", "south_streamtype")) %>%
filter(!year > 2014)
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(surv_tbl$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(.$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(~.$m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat)#,
# reformat seal covariate to match bayes dfa input
# seal_cov = map(~.$m_mat, function (x) {
#   expand.grid("time" = seq(1, ncol(x)),
#               "timeseries" = seq(1, nrow(x)),
#               "covariate" = 1) %>%
#     mutate(value = rep(seals$z_mean, times = nrow(x)))
# })
)
surv_tbl <- tibble(group = unique(surv_trim3$group)) %>%
mutate(
m_mat = surv_trim3 %>%
group_split(group) %>%
map(., make_mat),
# reformat seal covariate to match bayes dfa input
seal_cov = map(m_mat, function (x) {
expand.grid("time" = seq(1, ncol(x)),
"timeseries" = seq(1, nrow(x)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(x)))
})
)
surv_tbl
tt <- surv_tbl$m_mat[[1]]
seal_cov = expand.grid("time" = seq(1, ncol(tt)),
"timeseries" = seq(1, nrow(tt)),
"covariate" = 1) %>%
mutate(value = rep(seals$z_mean, times = nrow(tt)))
dim(tt)
head(seal_cov)
temp <- fit_dfa(y = tt, obs_covar = seal_cov, num_trends = 1, iter = 500,
chains = 1, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
glimpse(surv)
unique(surv$region)
unique(surv$agg_reg)
# make new survival tbl with trimmed years and seal covariate
surv_trim3 <- surv %>%
filter(region == "SS",
!year > 2014) %>%
droplevels()
unique(surv_trim3$group)
# make new survival tbl with trimmed years and seal covariate
surv_trim3 <- surv %>%
filter(agg_reg == "SS",
!year > 2014) %>%
droplevels()
unique(surv_trim3$group)
?map2
surv_tbl$fit1 <- map(surv_tbl$m_mat, function (x) {
fit_dfa(y = x, num_trends = 2, iter = 2500,  chains = 3, thin = 1,
control = list(adapt_delta = 0.95, max_treedepth = 20))
})
surv_tbl$fit1 <- map(surv_tbl$m_mat, function (x) {
fit_dfa(y = x, num_trends = 2, iter = 3000,  chains = 4, thin = 1,
zscore = TRUE, control = list(adapt_delta = 0.97, max_treedepth = 20))
})
surv_tbl$fit1[[1]]
surv_tbl$fit1[[2]]
map(surv_tbl$fit1, is_converged(., threshold = 1.05))
map(surv_tbl$fit1, is_converged, threshold = 1.05)
surv_tbl
map2(surv_tbl$group, surv_tbl$fit1, function (group_name, x) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
})
surv_tbl[]
surv_tbl <- surv_tbl[3:4, ]
surv_tbl
head(surv_tbl$seal_cov)
surv_tbl$fit2 <- map2(surv_tbl$m_mat, surv_tbl$seal_cov, function (x, y) {
fit_dfa(y = x, obs_covar = y, num_trends = 2, iter = 3000,
chains = 4, thin = 1, zscore = TRUE,
control = list(adapt_delta = 0.97, max_treedepth = 20))
})
tt <- fit_dfa(y = surv_tbl$m_mat[[1]], obs_covar = surv_tbl$seal_cov[[1]],
num_trends = 2, iter = 500,
chains = 2, thin = 1, zscore = TRUE,
control = list(adapt_delta = 0.97, max_treedepth = 20))
saveRDS(surv_tbl, here::here("data", "dfaBayesFits", "ss_seal_models.rds"))
library(tidyverse)
library(bayesdfa)
library(rstan)
#helper functions to fit and post-process DFA
source(here::here("R/functions/dfaFunctions.R"))
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(
M = -log(surv),
agg_reg = case_when(
(is.na(lat)) ~ "north",
(lat > 52 & !region == "UFR") ~ "north",
(region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI")) ~ "south",
TRUE ~ "SS"
),
group = paste(agg_reg, smoltType, sep = "_")
) %>%
arrange(group) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
rename(year = OEY)
# add seal covariates to Salish Sea model
seals <- read.csv(here::here("data/salmonData/sealPopEst.csv"),
stringsAsFactors = FALSE) %>%
rename(year = "Estimate", mean = "Mean", low = "X2.5th", up = "X97.5th",
reg = "Region") %>%
filter(reg == "SOG",
!year < 1972) %>%
mutate(z_mean = scale(mean)[, 1])
surv_tbl <- readRDS(here::here("data", "dfaBayesFits", "ss_seal_models.rds"))
surv_tbl
surv_tbl$fit2 <- map2(surv_tbl$m_mat, surv_tbl$seal_cov, function (x, y) {
fit_dfa(y = x, obs_covar = y, num_trends = 2, iter = 3000,
chains = 4, thin = 1, zscore = TRUE,
control = list(adapt_delta = 0.97, max_treedepth = 20))
})
map(surv_tbl$fit2, is_converged, threshold = 1.05)
surv_tbl
?fit_dfa
saveRDS(surv_tbl, here::here("data", "dfaBayesFits", "ss_seal_models.rds"))
pmap(list(surv_tbl$group, surv_tbl$fit1, surv_tbl$fit1),
function (group_name, x, x2) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
file_name2 <- paste(group_name, "2trend_seals_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
rot_dum2 <- rotate_trends(y)
pdf(here::here("figs", "dfa", "bayes", file_name2))
print(plot_fitted(y))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum2) +
ylim(-2, 2))
dev.off()
}
)
pmap(list(surv_tbl$group, surv_tbl$fit1, surv_tbl$fit1),
function (group_name, x, x2) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
file_name2 <- paste(group_name, "2trend_seals_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
rot_dum2 <- rotate_trends(x2)
pdf(here::here("figs", "dfa", "bayes", file_name2))
print(plot_fitted(x2))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum2) +
ylim(-2, 2))
dev.off()
}
)
pmap(list(surv_tbl$group, surv_tbl$fit1, surv_tbl$fit2),
function (group_name, x, x2) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
file_name2 <- paste(group_name, "2trend_seals_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
rot_dum2 <- rotate_trends(x2)
pdf(here::here("figs", "dfa", "bayes", file_name2))
print(plot_fitted(x2))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum2) +
ylim(-2, 2))
dev.off()
}
)
pmap(list(surv_tbl$group, surv_tbl$fit1, surv_tbl$fit2),
function (group_name, x, x2) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
file_name2 <- paste(group_name, "2trend_seals_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
rot_dum2 <- rotate_trends(x2)
pdf(here::here("figs", "dfa", "bayes", file_name2))
print(plot_fitted(x2))
print(plot_trends(rot_dum2))
print(plot_loadings(rot_dum2) +
ylim(-2, 2))
dev.off()
}
)
map(surv_tbl$fit2, summary)
surv_tbl$fit1 <- map(surv_tbl$m_mat, function (x) {
fit_dfa(y = x, num_trends = 2, iter = 3000,  chains = 4, thin = 1,
zscore = TRUE, control = list(adapt_delta = 0.97, max_treedepth = 20))
})
surv_tbl
saveRDS(surv_tbl, here::here("data", "dfaBayesFits", "ss_seal_models.rds"))
pmap(list(surv_tbl$group, surv_tbl$fit1, surv_tbl$fit2),
function (group_name, x, x2) {
file_name <- paste(group_name, "2trend_fit.pdf", sep = "_")
file_name2 <- paste(group_name, "2trend_seals_fit.pdf", sep = "_")
rot_dum <- rotate_trends(x)
pdf(here::here("figs", "dfa", "bayes", file_name))
print(plot_fitted(x))
print(plot_trends(rot_dum))
print(plot_loadings(rot_dum) +
ylim(-2, 2))
dev.off()
rot_dum2 <- rotate_trends(x2)
pdf(here::here("figs", "dfa", "bayes", file_name2))
print(plot_fitted(x2))
print(plot_trends(rot_dum2))
print(plot_loadings(rot_dum2) +
ylim(-2, 2))
dev.off()
}
)
exp(3.5)
log(0.3)
exp(3.5)
exp(4.5)
