# select(a_group, a_group2) %>%
filter(is.na(a_group)) %>%
select(stock_name) %>%
distinct()
gen %>%
# select(a_group, a_group2) %>%
filter(is.na(a_group)) %>%
select(stock) %>%
distinct()
glimpse(stock_key)
stock_key
unique(gen$stock_name)
gen %>%
# select(a_group, a_group2) %>%
filter(is.na(stock %in% ("STI", "TAK"))) %>%
# select(stock_name) %>%
distinct()
gen %>%
# select(a_group, a_group2) %>%
filter(stock %in% ("STI", "TAK")) %>%
# select(stock_name) %>%
distinct()
gen %>%
# select(a_group, a_group2) %>%
filter(stock %in% ("STI", "TAK"))
gen %>%
# select(a_group, a_group2) %>%
filter(stock %in% c("STI", "TAK")) %>%
# select(stock_name) %>%
distinct()
glimpse(gen)
#plot raw generation length data
surv %>%
filter(!is.na(gen_length),
!is.na(stock_name)) %>%
ggplot(.) +
geom_point(aes(x = year, y = M, fill = a_group2), shape = 21) +
facet_wrap(~ fct_reorder(stock, as.numeric(a_group2))) +
theme(legend.position = "top") +
labs(y = "Mean Generation Length")
#plot raw generation length data
gen %>%
filter(!is.na(gen_length),
!is.na(stock_name)) %>%
ggplot(.) +
geom_point(aes(x = year, y = gen_length, fill = a_group2), shape = 21) +
facet_wrap(~ fct_reorder(stock, as.numeric(a_group2))) +
theme(legend.position = "top") +
labs(y = "Mean Generation Length")
#plot raw generation length data
gen %>%
filter(!is.na(gen_length),
!is.na(stock_name)) %>%
ggplot(.) +
geom_point(aes(x = year, y = gen_length, fill = a_group2), shape = 21) +
facet_wrap(~ fct_reorder(stock, as.numeric(a_group2))) +
theme(legend.position = "top") +
labs(y = "Mean Generation Length") =
ggsidekick::theme_sleek()
#plot raw generation length data
gen %>%
filter(!is.na(gen_length),
!is.na(stock_name)) %>%
ggplot(.) +
geom_point(aes(x = year, y = gen_length, fill = a_group2), shape = 21) +
facet_wrap(~ fct_reorder(stock, as.numeric(a_group2))) +
theme(legend.position = "top") +
labs(y = "Mean Generation Length") +
ggsidekick::theme_sleek()
glimpse(gen)
stk_data <- readRDS(here::here("data/salmonData/cwt_indicator_surv_clean.RDS")) %>%
select(brood_year, stock, stock_name, smolt, run, region, a_group, a_group2,
year)
gen <- read.csv(here::here("data/salmonData/cwt_indicator_generation_time.csv")) %>%
mutate(stock = as.factor(Stock)) %>%
select(stock, brood_year = BY,
gen_length = GenTim.fishing.mortality.represented.in.calcuations.) %>%
# add relevant metadata
left_join(., stk_data, by = c("brood_year", "stock"))
glimpse(gen)
gen <- read.csv(here::here("data/salmonData/cwt_indicator_generation_time.csv")) %>%
mutate(stock = as.factor(Stock)) %>%
select(stock, brood_year = BY,
gen_length = GenTim.fishing.mortality.represented.in.calcuations.) %>%
# add relevant metadata
left_join(., stk_data, by = c("brood_year", "stock")) %>%
mutate(a_group =  as.factor(a_group),
a_group2 = as.factor(a_group2))
#plot raw generation length data
gen %>%
filter(!is.na(gen_length),
!is.na(stock_name)) %>%
ggplot(.) +
geom_point(aes(x = year, y = gen_length, fill = a_group2), shape = 21) +
facet_wrap(~ fct_reorder(stock, as.numeric(a_group2))) +
theme(legend.position = "top") +
labs(y = "Mean Generation Length") +
ggsidekick::theme_sleek()
unique(by_dat$stock_name)
by_dat %>% select(stock, stockname) %>% distinct()
by_dat %>% select(stock, stock_name) %>% distinct()
by_dat %>% select(stock, stock_name) %>% distinct() %>% print(n=Inf)
by_dat %>% select(stock, stockname, region, smolt, j_group:j_group3, a_group, a_grop2)
by_dat %>% select(stock, stock_name, region, smolt, j_group:j_group3, a_group, a_grop2)
by_dat %>% select(stock, stock_name, region, smolt, j_group:j_group3, a_group, a_group2)
by_dat %>% select(stock, stock_name, region, smolt, j_group:j_group3, a_group, a_group2) %>% distinct() %>% print(n = Inf)
by_dat %>% select(stock, stock_name, region, smolt, j_group2, a_group, a_group2) %>% distinct() %>% print(n = Inf)
by_dat <- by_dat1 %>%
left_join(., metadata, by = "stock_name") %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long),
M = -log(survival),
j_group = case_when(
(lat > 52 & !region == "UFR") ~ "north",
region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI") ~ "south",
TRUE ~ "salish"
),
a_group = case_when(
#subset of ECVI stocks are north-migrating
stock_name %in% c("Puntledge River Summer", "Quinsam River Fall") ~
"north",
region %in% c("ECVI", "LFR", "HOODC", "SPGSD", "NPGSD") ~ "south",
smoltType == "streamtype" ~ "offshore",
grepl("COLR", region) ~ "columbia",
TRUE ~ "north"
),
run = tolower(adultRunTiming),
# split sog and puget
j_group2 = case_when(
region %in% c("HOODC", "SPGSD", "NPGSD") ~ "puget",
j_group == "salish" ~ "sog",
TRUE ~ j_group
),
j_group3 = paste(j_group2, smoltType, sep = "_"),
# split salish resident stocks from non
a_group2 = case_when(
stock_name %in% c("Big Qualicum River Fall", "Chilliwack River Fall",
"Cowichan River Fall", "Nanaimo River Fall") ~
"salish",
j_group2 == "puget" ~ "salish",
TRUE ~ a_group
)
) %>%
select(brood_year:stock_name, smolt = smoltType, run,
region:long, j_group, j_group2, j_group3, a_group, a_group2,
survival, M) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
mutate(brood_year = as.numeric(brood_year),
year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1),
smolt = as.factor(smolt),
j_group = as.factor(j_group),
j_group2 = as.factor(j_group2),
j_group3 = as.factor(j_group3),
stock_f = fct_reorder(stock, as.numeric(j_group)))
by_dat %>% select(stock, stock_name, region, smolt, j_group2, a_group, a_group2) %>% distinct() %>% print(n = Inf)
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE)
# import old survival data to add some features
# also includes some stocks added manually
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE)
by_dat1 %>%
left_join(., old_surv %>% select(stock, jurisdiction:long) %>% distinct(),
by = "stock") %>%
# filter(is.na(jurisdiction)) %>%
select(stock, stock_name, jurisdiction:long) %>%
distinct()
glimpse(old_surv)
# import old survival data to add some features
# also includes some stocks added manually
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long))
read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
glimpse()
# import old survival data to add some features
# also includes some stocks added manually
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
glimpse()
by_dat1 %>%
left_join(., old_surv %>% select(stock, jurisdiction:long) %>% distinct(),
by = "stock") %>%
# filter(is.na(jurisdiction)) %>%
select(stock, stock_name, jurisdiction:long) %>%
distinct()
read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
select(stock, jurisdiction:long) %>%
distinct()
# import old survival data to add some features
# also includes some stocks added manually
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
select(stock, jurisdiction:long) %>%
distinct()
by_dat1 %>%
left_join(., old_surv, by = "stock") %>%
# filter(is.na(jurisdiction)) %>%
select(stock, stock_name, jurisdiction:long) %>%
distinct()
# export temporary .csv to fill in metadata
temp_out <- by_dat1 %>%
left_join(., old_surv, by = "stock") %>%
# filter(is.na(jurisdiction)) %>%
select(stock, stock_name, jurisdiction:long) %>%
distinct() %>%
arrange(stock)
temp_out
by_dat1 <- by_raw[-1, ] %>%
pivot_longer(., 2:ncol(.), names_to = "stock", values_to = "survival") %>%
left_join(., stock_key, by = "stock") %>%
mutate(survival = as.numeric(survival)) %>%
select(brood_year = year, stock, stock_name, survival) %>%
arrange(stock) #%>%
# import old survival data to add some features
# also includes some stocks added manually
old_surv <- read.csv(here::here("data/salmonData/CLEANcwtInd_age2SR_OEY.csv"),
stringsAsFactors = FALSE) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
select(stock, jurisdiction:long) %>%
distinct()
old_surv
# export temporary .csv to fill in metadata
temp_out <- by_dat1 %>%
left_join(., old_surv, by = "stock") %>%
# filter(is.na(jurisdiction)) %>%
select(stock, stock_name, jurisdiction:long) %>%
distinct() %>%
arrange(stock)
temp_out
temp_out
# export temporary .csv to fill in metadata
# temp_out <- by_dat1 %>%
#   left_join(., old_surv, by = "stock") %>%
#   # filter(is.na(jurisdiction)) %>%
#   select(stock, stock_name, jurisdiction:long) %>%
#   distinct() %>%
#   arrange(stock)
write.csv(temp_out, here::here("data", "salmonData", "metadata.csv"))
gen <- read.csv(here::here("data/salmonData/cwt_indicator_generation_time.csv")) %>%
mutate(stock = as.factor(Stock)) %>%
select(stock, brood_year = BY,
gen_length = GenTim.fishing.mortality.represented.in.calcuations.)
glimpse(gen)
# import version cleaned by hand (added lat/longs and two systems HOK and SMK)
metadata <- read.csv(here::here("data", "salmonData", "metadata_clean.csv")) %>%
select(-X)
# import version cleaned by hand (added lat/longs and two systems HOK and SMK)
metadata <- read.csv(here::here("data", "salmonData", "metadata_clean.csv"))
metadata$stock
metadata %>%
left_join(., by_dat1, by = "stock") %>%
glimpse()
metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
glimpse()
by_dat <- #by_dat1 %>%
# left_join(., metadata, by = "stock_name") %>%
metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
glimpse()
unique(by_dat$stock)
metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
glimpse()
glimpse(by_dat1)
by_dat1 <- by_raw[-1, ] %>%
pivot_longer(., 2:ncol(.), names_to = "stock", values_to = "survival") %>%
left_join(., stock_key, by = "stock") %>%
mutate(survival = as.numeric(survival),
brood_year = as.numeric(brood_year)) %>%
select(brood_year, stock, stock_name, survival) %>%
arrange(stock) #%>%
by_dat1 <- by_raw[-1, ] %>%
pivot_longer(., 2:ncol(.), names_to = "stock", values_to = "survival") %>%
left_join(., stock_key, by = "stock") %>%
mutate(survival = as.numeric(survival),
brood_year = as.numeric(year)) %>%
select(brood_year, stock, stock_name, survival) %>%
arrange(stock) #%>%
glimpse(by_dat1)
by_dat <- metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
glimpse()
tail(by_dat)
by_dat <- metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long),
M = -log(survival),
# change Elwha's region given catch dist similar to Puget
region = ifelse(stock == "ELW", "NPGSD", region),
j_group = case_when(
(lat > 52 & !region == "UFR") ~ "north",
region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI") ~ "south",
TRUE ~ "salish"
),
a_group = case_when(
#subset of ECVI stocks are north-migrating
stock_name %in% c("Puntledge River Summer", "Quinsam River Fall") ~
"north",
region %in% c("ECVI", "LFR", "HOODC", "SPGSD", "NPGSD") ~ "south",
smoltType == "streamtype" ~ "offshore",
region == "LCOLR" ~ "broad",
TRUE ~ "north"
),
run = tolower(adultRunTiming),
# split sog and puget
j_group2 = case_when(
region %in% c("HOODC", "SPGSD", "NPGSD") ~ "puget",
j_group == "salish" ~ "sog",
TRUE ~ j_group
),
j_group3 = paste(j_group2, smoltType, sep = "_"),
# split salish resident stocks from non
a_group2 = case_when(
stock_name %in% c("Big Qualicum River Fall", "Chilliwack River Fall",
"Cowichan River Fall", "Nanaimo River Fall") ~
"salish",
j_group2 == "puget" ~ "salish",
TRUE ~ a_group
)
) %>%
select(brood_year:stock_name, smolt = smoltType, run,
region:long, j_group, j_group2, j_group3, a_group, a_group2,
survival, M) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
mutate(brood_year = as.numeric(brood_year),
year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1),
smolt = as.factor(smolt),
j_group = as.factor(j_group),
j_group2 = as.factor(j_group2),
j_group3 = as.factor(j_group3),
stock_f = fct_reorder(stock, as.numeric(j_group)))
by_dat <- metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long),
M = -log(survival),
# change Elwha's region given catch dist similar to Puget
region = ifelse(stock == "ELW", "NPGSD", region),
j_group = case_when(
(lat > 52 & !region == "UFR") ~ "north",
region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI") ~ "south",
TRUE ~ "salish"
),
a_group = case_when(
#subset of ECVI stocks are north-migrating
stock_name %in% c("Puntledge River Summer", "Quinsam River Fall") ~
"north",
region %in% c("ECVI", "LFR", "HOODC", "SPGSD", "NPGSD") ~ "south",
smoltType == "streamtype" ~ "offshore",
region == "LCOLR" ~ "broad",
TRUE ~ "north"
),
run = tolower(adultRunTiming),
# split sog and puget
j_group2 = case_when(
region %in% c("HOODC", "SPGSD", "NPGSD") ~ "puget",
j_group == "salish" ~ "sog",
TRUE ~ j_group
),
j_group3 = paste(j_group2, smoltType, sep = "_"),
# split salish resident stocks from non
a_group2 = case_when(
stock_name %in% c("Big Qualicum River Fall", "Chilliwack River Fall",
"Cowichan River Fall", "Nanaimo River Fall") ~
"salish",
j_group2 == "puget" ~ "salish",
TRUE ~ a_group
)
) %>%
glimpse()
by_dat <- metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long),
M = -log(survival),
# change Elwha's region given catch dist similar to Puget
region = ifelse(stock == "ELW", "NPGSD", region),
j_group = case_when(
(lat > 52 & !region == "UFR") ~ "north",
region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI") ~ "south",
TRUE ~ "salish"
),
a_group = case_when(
#subset of ECVI stocks are north-migrating
stock_name %in% c("Puntledge River Summer", "Quinsam River Fall") ~
"north",
region %in% c("ECVI", "LFR", "HOODC", "SPGSD", "NPGSD") ~ "south",
smoltType == "streamtype" ~ "offshore",
region == "LCOLR" ~ "broad",
TRUE ~ "north"
),
run = tolower(adultRunTiming),
# split sog and puget
j_group2 = case_when(
region %in% c("HOODC", "SPGSD", "NPGSD") ~ "puget",
j_group == "salish" ~ "sog",
TRUE ~ j_group
),
j_group3 = paste(j_group2, smoltType, sep = "_"),
# split salish resident stocks from non
a_group2 = case_when(
stock_name %in% c("Big Qualicum River Fall", "Chilliwack River Fall",
"Cowichan River Fall", "Nanaimo River Fall") ~
"salish",
j_group2 == "puget" ~ "salish",
TRUE ~ a_group
)
) %>%
select(stock, stock_name, brood_year, survival, M, gen_length,
jurisdiction, smolt = smoltType, run,
region:long, j_group, j_group2, j_group3, a_group, a_group2) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
glimpse()
by_dat <- metadata %>%
left_join(., by_dat1, by = c("stock", "stock_name")) %>%
left_join(., gen, by = c("stock", "brood_year")) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long),
M = -log(survival),
# change Elwha's region given catch dist similar to Puget
region = ifelse(stock == "ELW", "NPGSD", region),
j_group = case_when(
(lat > 52 & !region == "UFR") ~ "north",
region %in% c("JFUCA", "LCOLR", "MCOLR", "ORCST", "UCOLR", "WACST",
"WCVI") ~ "south",
TRUE ~ "salish"
),
a_group = case_when(
#subset of ECVI stocks are north-migrating
stock_name %in% c("Puntledge River Summer", "Quinsam River Fall") ~
"north",
region %in% c("ECVI", "LFR", "HOODC", "SPGSD", "NPGSD") ~ "south",
smoltType == "streamtype" ~ "offshore",
region == "LCOLR" ~ "broad",
TRUE ~ "north"
),
run = tolower(adultRunTiming),
# split sog and puget
j_group2 = case_when(
region %in% c("HOODC", "SPGSD", "NPGSD") ~ "puget",
j_group == "salish" ~ "sog",
TRUE ~ j_group
),
j_group3 = paste(j_group2, smoltType, sep = "_"),
# split salish resident stocks from non
a_group2 = case_when(
stock_name %in% c("Big Qualicum River Fall", "Chilliwack River Fall",
"Cowichan River Fall", "Nanaimo River Fall") ~
"salish",
j_group2 == "puget" ~ "salish",
TRUE ~ a_group
)
) %>%
select(stock, stock_name, brood_year, survival, M, gen_length,
jurisdiction, smolt = smoltType, run,
region:long, j_group, j_group2, j_group3, a_group, a_group2) %>%
mutate_at(vars(stock), list(~ factor(., levels = unique(.)))) %>%
mutate(year = ifelse(smolt == "streamtype", brood_year + 2,
brood_year + 1),
smolt = as.factor(smolt),
j_group = as.factor(j_group),
j_group2 = as.factor(j_group2),
j_group3 = as.factor(j_group3),
a_group =  as.factor(a_group),
a_group2 = as.factor(a_group2))
saveRDS(by_dat,
here::here("data", "salmonData", "cwt_indicator_surv_clean.RDS"))
surv_tbl$m_mat
#function to fit 2 trends unless n_groups < 3
dfa_fits <- furrr::future_map(surv_tbl$m_mat, .f = fit_dfa,
num_trends = 2, zscore = TRUE,
iter = 1500, chains = 4, thin = 1,
control = list(adapt_delta = 0.95,
max_treedepth = 20),
.progress = TRUE,
seed = TRUE)
map(dfa_fits, summary)
?fit_dfa
map(dfa_fits, function(x) summary(x$model))
map(dfa_fits, summary)
dfa_fits[[1]]
map(dfa_fits, function(x) max(x$Rhat))
map(dfa_fits, function(x) x %>% filter(n_eff < 1000))
str(dfa_fits[[1]])
str(dfa_fits[[1]]$monitor %>% filter(n_eff < 1000))
saveRDS(dfa_fits, here::here("data", "mortality_fits", "bayesdfa_by_group.RDS"))
